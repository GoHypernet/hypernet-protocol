export declare const ContractArtifacts: {
    NitroAdjudicatorArtifact: {
        "abi": ({
            "anonymous": boolean;
            "inputs": ({
                "indexed": boolean;
                "internalType": string;
                "name": string;
                "type": string;
                "components"?: undefined;
            } | {
                "components": {
                    "internalType": string;
                    "name": string;
                    "type": string;
                }[];
                "indexed": boolean;
                "internalType": string;
                "name": string;
                "type": string;
            })[];
            "name": string;
            "type": string;
            "outputs"?: undefined;
            "stateMutability"?: undefined;
        } | {
            "inputs": ({
                "internalType": string;
                "name": string;
                "type": string;
                "components"?: undefined;
            } | {
                "components": {
                    "internalType": string;
                    "name": string;
                    "type": string;
                }[];
                "internalType": string;
                "name": string;
                "type": string;
            })[];
            "name": string;
            "outputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        })[];
        "evm": {
            "bytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
            "deployedBytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
        };
        "bytecode": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "NitroAdjudicator": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": any[];
                "unitAlias": string;
                "literals"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "abstract": boolean;
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "baseFunctions": number[];
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                    "tryCall"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "baseType": {
                                        "contractScope": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "length": any;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "components"?: undefined;
                                    "isConstant"?: undefined;
                                    "isInlineArray"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "components": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": any;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isInlineArray": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                        } | {
                            "body": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "arguments": ({
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "arguments"?: undefined;
                                                "expression"?: undefined;
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "kind"?: undefined;
                                                "lValueRequested"?: undefined;
                                                "names"?: undefined;
                                                "tryCall"?: undefined;
                                            } | {
                                                "argumentTypes": any;
                                                "arguments": {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "baseExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "indexExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                }[];
                                                "expression": {
                                                    "argumentTypes": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    }[];
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                                "referencedDeclaration"?: undefined;
                                            })[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "arguments": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "baseExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "indexExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "tryCall": boolean;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": number[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "initializationExpression": {
                                "assignments": number[];
                                "declarations": {
                                    "constant": boolean;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overrides": any;
                                    "scope": number;
                                    "src": string;
                                    "stateVariable": boolean;
                                    "storageLocation": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "value": any;
                                    "visibility": string;
                                }[];
                                "id": number;
                                "initialValue": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "nodeType": string;
                                "src": string;
                            };
                            "loopExpression": {
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "operator": string;
                                    "prefix": boolean;
                                    "src": string;
                                    "subExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "nodeType": string;
                                "src": string;
                            };
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": string;
                    "functionSelector": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": {
                        "id": number;
                        "nodeType": string;
                        "overrides": any[];
                        "src": string;
                    };
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                    "tryCall"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                        })[];
                    };
                    "documentation": string;
                    "functionSelector": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "typeName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "baseType": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "length": any;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "baseType": {
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "length": any;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "typeName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "body": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "arguments": {
                                                    "argumentTypes": any;
                                                    "arguments": ({
                                                        "argumentTypes": any;
                                                        "commonType": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftExpression": {
                                                            "argumentTypes": any;
                                                            "commonType": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "leftExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "nodeType": string;
                                                            "operator": string;
                                                            "rightExpression": {
                                                                "argumentTypes": any;
                                                                "components": {
                                                                    "argumentTypes": any;
                                                                    "commonType": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                    "id": number;
                                                                    "isConstant": boolean;
                                                                    "isLValue": boolean;
                                                                    "isPure": boolean;
                                                                    "lValueRequested": boolean;
                                                                    "leftExpression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "name": string;
                                                                        "nodeType": string;
                                                                        "overloadedDeclarations": any[];
                                                                        "referencedDeclaration": number;
                                                                        "src": string;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                    };
                                                                    "nodeType": string;
                                                                    "operator": string;
                                                                    "rightExpression": {
                                                                        "argumentTypes": any;
                                                                        "hexValue": string;
                                                                        "id": number;
                                                                        "isConstant": boolean;
                                                                        "isLValue": boolean;
                                                                        "isPure": boolean;
                                                                        "kind": string;
                                                                        "lValueRequested": boolean;
                                                                        "nodeType": string;
                                                                        "src": string;
                                                                        "subdenomination": any;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                        "value": string;
                                                                    };
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                }[];
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isInlineArray": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "hexValue"?: undefined;
                                                        "kind"?: undefined;
                                                        "subdenomination"?: undefined;
                                                        "value"?: undefined;
                                                        "name"?: undefined;
                                                        "overloadedDeclarations"?: undefined;
                                                        "referencedDeclaration"?: undefined;
                                                    } | {
                                                        "argumentTypes": any;
                                                        "hexValue": string;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "kind": string;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "subdenomination": any;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "value": string;
                                                        "commonType"?: undefined;
                                                        "leftExpression"?: undefined;
                                                        "operator"?: undefined;
                                                        "rightExpression"?: undefined;
                                                        "name"?: undefined;
                                                        "overloadedDeclarations"?: undefined;
                                                        "referencedDeclaration"?: undefined;
                                                    } | {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "commonType"?: undefined;
                                                        "isConstant"?: undefined;
                                                        "isLValue"?: undefined;
                                                        "isPure"?: undefined;
                                                        "lValueRequested"?: undefined;
                                                        "leftExpression"?: undefined;
                                                        "operator"?: undefined;
                                                        "rightExpression"?: undefined;
                                                        "hexValue"?: undefined;
                                                        "kind"?: undefined;
                                                        "subdenomination"?: undefined;
                                                        "value"?: undefined;
                                                    })[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "tryCall": boolean;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                }[];
                                                "expression": {
                                                    "argumentTypes": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": any;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "initializationExpression": {
                                "assignments": number[];
                                "declarations": {
                                    "constant": boolean;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overrides": any;
                                    "scope": number;
                                    "src": string;
                                    "stateVariable": boolean;
                                    "storageLocation": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "value": any;
                                    "visibility": string;
                                }[];
                                "id": number;
                                "initialValue": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "nodeType": string;
                                "src": string;
                            };
                            "loopExpression": {
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "operator": string;
                                    "prefix": boolean;
                                    "src": string;
                                    "subExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "nodeType": string;
                                "src": string;
                            };
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": ({
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "expression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "memberName"?: undefined;
                                    } | {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                    })[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "names"?: undefined;
                                    "tryCall"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                            "arguments"?: undefined;
                                            "expression"?: undefined;
                                            "names"?: undefined;
                                            "tryCall"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "typeName": {
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": any;
                                                        "typeString": any;
                                                    };
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "hexValue"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "hexValue": string;
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "subdenomination": any;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "value": string;
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "typeName": {
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": any;
                                                        "typeString": any;
                                                    };
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "hexValue"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "hexValue"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "kind"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                            "arguments"?: undefined;
                                            "expression"?: undefined;
                                            "names"?: undefined;
                                            "tryCall"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                        })[];
                    };
                    "documentation": string;
                    "functionSelector": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                                "baseType"?: undefined;
                                "length"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "baseType"?: undefined;
                                "length"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "baseType": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "contractScope"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "id": number;
                                "length": any;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "name"?: undefined;
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "baseType": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "length": any;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "name"?: undefined;
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "baseType": {
                                        "contractScope": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "length": any;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "components"?: undefined;
                                    "isConstant"?: undefined;
                                    "isInlineArray"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "components": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": any;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isInlineArray": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                        } | {
                            "body": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": ({
                                    "assignments": number[];
                                    "declarations": {
                                        "constant": boolean;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overrides": any;
                                        "scope": number;
                                        "src": string;
                                        "stateVariable": boolean;
                                        "storageLocation": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": {
                                            "contractScope": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "value": any;
                                        "visibility": string;
                                    }[];
                                    "id": number;
                                    "initialValue": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "baseExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "indexExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "components"?: undefined;
                                            "isInlineArray"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "components": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "id": number;
                                            "isConstant": boolean;
                                            "isInlineArray": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "expression"?: undefined;
                                            "memberName"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "src": string;
                                    "condition"?: undefined;
                                    "falseBody"?: undefined;
                                    "trueBody"?: undefined;
                                } | {
                                    "condition": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "typeName": {
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": any;
                                                        "typeString": any;
                                                    };
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "falseBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": {
                                            "expression": {
                                                "argumentTypes": any;
                                                "arguments": any[];
                                                "expression": {
                                                    "argumentTypes": any[];
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": number[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                        }[];
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "trueBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": {
                                            "expression": {
                                                "argumentTypes": any;
                                                "arguments": ({
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "expression"?: undefined;
                                                    "isConstant"?: undefined;
                                                    "isLValue"?: undefined;
                                                    "isPure"?: undefined;
                                                    "lValueRequested"?: undefined;
                                                    "memberName"?: undefined;
                                                } | {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "name"?: undefined;
                                                    "overloadedDeclarations"?: undefined;
                                                })[];
                                                "expression": {
                                                    "argumentTypes": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "arguments": {
                                                            "argumentTypes": any;
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "baseExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "indexExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        }[];
                                                        "expression": {
                                                            "argumentTypes": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            }[];
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "kind": string;
                                                        "lValueRequested": boolean;
                                                        "names": any[];
                                                        "nodeType": string;
                                                        "src": string;
                                                        "tryCall": boolean;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                        }[];
                                    };
                                    "assignments"?: undefined;
                                    "declarations"?: undefined;
                                    "initialValue"?: undefined;
                                })[];
                            };
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "initializationExpression": {
                                "assignments": number[];
                                "declarations": {
                                    "constant": boolean;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overrides": any;
                                    "scope": number;
                                    "src": string;
                                    "stateVariable": boolean;
                                    "storageLocation": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "value": any;
                                    "visibility": string;
                                }[];
                                "id": number;
                                "initialValue": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "nodeType": string;
                                "src": string;
                            };
                            "loopExpression": {
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "operator": string;
                                    "prefix": boolean;
                                    "src": string;
                                    "subExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "nodeType": string;
                                "src": string;
                            };
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                        })[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "baseFunctions"?: undefined;
                    "functionSelector"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": string;
                    "functionSelector": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "baseType"?: undefined;
                                "length"?: undefined;
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "baseType": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "contractScope"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "id": number;
                                "length": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "name"?: undefined;
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "baseType": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "length": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "name"?: undefined;
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "baseType"?: undefined;
                                "length"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "baseFunctions"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "contractName": string;
        "compiler": {
            "version": string;
        };
        "networks": {};
    };
    TrivialAppArtifact: {
        "abi": {
            "inputs": ({
                "components": {
                    "internalType": string;
                    "name": string;
                    "type": string;
                }[];
                "internalType": string;
                "name": string;
                "type": string;
            } | {
                "internalType": string;
                "name": string;
                "type": string;
                "components"?: undefined;
            })[];
            "name": string;
            "outputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "stateMutability": string;
            "type": string;
        }[];
        "evm": {
            "bytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
            "deployedBytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
        };
        "bytecode": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TrivialApp": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": any[];
                "unitAlias": string;
                "literals"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "abstract": boolean;
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": {
                    "baseFunctions": number[];
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": string;
                    "functionSelector": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": {
                        "id": number;
                        "nodeType": string;
                        "overrides": any[];
                        "src": string;
                    };
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                }[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "contractName": string;
        "compiler": {
            "version": string;
        };
        "networks": {};
    };
    Erc20AssetHolderArtifact: {
        "abi": ({
            "inputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
            "name"?: undefined;
            "outputs"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "stateMutability"?: undefined;
            "outputs"?: undefined;
        } | {
            "inputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        })[];
        "evm": {
            "bytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
            "deployedBytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
        };
        "bytecode": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "ERC20AssetHolder": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": any[];
                "unitAlias": string;
                "literals"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "abstract": boolean;
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "functionSelector": string;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "virtual"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                    "tryCall"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        })[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "constant"?: undefined;
                    "functionSelector"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "operator": string;
                                    "prefix": boolean;
                                    "src": string;
                                    "subExpression": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "operator"?: undefined;
                                    "prefix"?: undefined;
                                    "subExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": any;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "baseExpression"?: undefined;
                                            "indexExpression"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": ({
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "typeName"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "arguments"?: undefined;
                                        "kind"?: undefined;
                                        "names"?: undefined;
                                        "tryCall"?: undefined;
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                    } | {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "typeName": {
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": any;
                                                    "typeString": any;
                                                };
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "memberName"?: undefined;
                                        "referencedDeclaration"?: undefined;
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                    } | {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "expression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "memberName"?: undefined;
                                        "arguments"?: undefined;
                                        "kind"?: undefined;
                                        "names"?: undefined;
                                        "tryCall"?: undefined;
                                    })[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "names"?: undefined;
                                    "tryCall"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "arguments"?: undefined;
                                            "expression"?: undefined;
                                            "kind"?: undefined;
                                            "names"?: undefined;
                                            "tryCall"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                        })[];
                    };
                    "documentation": string;
                    "functionSelector": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "baseFunctions": number[];
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": {
                        "id": number;
                        "nodeType": string;
                        "overrides": any[];
                        "src": string;
                    };
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "constant"?: undefined;
                    "functionSelector"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "contractName": string;
        "compiler": {
            "version": string;
        };
        "networks": {};
    };
    EthAssetHolderArtifact: {
        "abi": ({
            "inputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
            "name"?: undefined;
            "outputs"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "stateMutability"?: undefined;
            "outputs"?: undefined;
        } | {
            "inputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        })[];
        "evm": {
            "bytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
            "deployedBytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
        };
        "bytecode": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "ETHAssetHolder": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": any[];
                "unitAlias": string;
                "literals"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "abstract": boolean;
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "functionSelector"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "operator": string;
                                    "prefix": boolean;
                                    "src": string;
                                    "subExpression": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "operator"?: undefined;
                                    "prefix"?: undefined;
                                    "subExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": any;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "baseExpression"?: undefined;
                                            "indexExpression"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "arguments"?: undefined;
                                            "expression"?: undefined;
                                            "kind"?: undefined;
                                            "names"?: undefined;
                                            "tryCall"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                        })[];
                    };
                    "documentation": string;
                    "functionSelector": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "baseFunctions"?: undefined;
                } | {
                    "baseFunctions": number[];
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": {
                        "id": number;
                        "nodeType": string;
                        "overrides": any[];
                        "src": string;
                    };
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "functionSelector"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "contractName": string;
        "compiler": {
            "version": string;
        };
        "networks": {};
    };
    TokenArtifact: {
        "abi": ({
            "inputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
            "name"?: undefined;
            "outputs"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "stateMutability"?: undefined;
            "outputs"?: undefined;
        } | {
            "inputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        })[];
        "evm": {
            "bytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
            "deployedBytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
        };
        "bytecode": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "Token": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": any[];
                "unitAlias": string;
                "literals"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "abstract": boolean;
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "expression"?: undefined;
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "hexValue": string;
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "kind": string;
                            "lValueRequested": boolean;
                            "nodeType": string;
                            "src": string;
                            "subdenomination": any;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "value": string;
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                }[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "contractName": string;
        "compiler": {
            "version": string;
        };
        "networks": {};
    };
    AssetHolderArtifact: {
        "abi": ({
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "outputs"?: undefined;
            "stateMutability"?: undefined;
        } | {
            "inputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "internalType": string;
                "name": string;
                "type": string;
            }[];
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        })[];
        "evm": {
            "bytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
            "deployedBytecode": {
                "linkReferences": {};
                "object": string;
                "opcodes": string;
                "sourceMap": string;
            };
        };
        "bytecode": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "AssetHolder": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": any[];
                "unitAlias": string;
                "literals"?: undefined;
                "abstract"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "abstract": boolean;
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "id": number;
                    "libraryName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "nodeType": string;
                    "src": string;
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "stateMutability"?: undefined;
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "constant"?: undefined;
                    "name"?: undefined;
                    "overrides"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "functionSelector"?: undefined;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "virtual"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "stateMutability": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "functionSelector"?: undefined;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "virtual"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "constant": boolean;
                    "functionSelector": string;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "name"?: undefined;
                        "stateMutability"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "virtual"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "baseType": {
                                        "contractScope": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "length": any;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "components"?: undefined;
                                    "isConstant"?: undefined;
                                    "isInlineArray"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "components": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": any;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isInlineArray": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "baseExpression"?: undefined;
                                "indexExpression"?: undefined;
                                "hexValue"?: undefined;
                                "subdenomination"?: undefined;
                                "value"?: undefined;
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "expression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                                "hexValue"?: undefined;
                                "subdenomination"?: undefined;
                                "value"?: undefined;
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "expression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                                "baseExpression"?: undefined;
                                "indexExpression"?: undefined;
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "expression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "memberName": string;
                                "nodeType": string;
                                "referencedDeclaration": any;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                                "baseExpression"?: undefined;
                                "indexExpression"?: undefined;
                                "hexValue"?: undefined;
                                "subdenomination"?: undefined;
                                "value"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "expression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "body": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "condition": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "falseBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": ({
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftHandSide": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightHandSide": {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "baseExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "indexExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                            "condition"?: undefined;
                                            "falseBody"?: undefined;
                                            "trueBody"?: undefined;
                                        } | {
                                            "condition": {
                                                "argumentTypes": any;
                                                "commonType": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "falseBody": {
                                                "id": number;
                                                "nodeType": string;
                                                "src": string;
                                                "statements": ({
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "prefix": boolean;
                                                        "src": string;
                                                        "subExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "leftHandSide"?: undefined;
                                                        "rightHandSide"?: undefined;
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                } | {
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "arguments": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            }[];
                                                            "expression": {
                                                                "argumentTypes": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                }[];
                                                                "expression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "memberName": string;
                                                                "nodeType": string;
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "kind": string;
                                                            "lValueRequested": boolean;
                                                            "names": any[];
                                                            "nodeType": string;
                                                            "src": string;
                                                            "tryCall": boolean;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "prefix"?: undefined;
                                                        "subExpression"?: undefined;
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                })[];
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                            "trueBody": {
                                                "id": number;
                                                "nodeType": string;
                                                "src": string;
                                                "statements": ({
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "prefix": boolean;
                                                        "src": string;
                                                        "subExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "leftHandSide"?: undefined;
                                                        "rightHandSide"?: undefined;
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                } | {
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "hexValue": string;
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "kind": string;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "subdenomination": any;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "value": string;
                                                            "name"?: undefined;
                                                            "overloadedDeclarations"?: undefined;
                                                            "referencedDeclaration"?: undefined;
                                                            "commonType"?: undefined;
                                                            "leftExpression"?: undefined;
                                                            "operator"?: undefined;
                                                            "rightExpression"?: undefined;
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "prefix"?: undefined;
                                                        "subExpression"?: undefined;
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                } | {
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "hexValue"?: undefined;
                                                            "isConstant"?: undefined;
                                                            "isLValue"?: undefined;
                                                            "isPure"?: undefined;
                                                            "kind"?: undefined;
                                                            "lValueRequested"?: undefined;
                                                            "subdenomination"?: undefined;
                                                            "value"?: undefined;
                                                            "commonType"?: undefined;
                                                            "leftExpression"?: undefined;
                                                            "operator"?: undefined;
                                                            "rightExpression"?: undefined;
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "prefix"?: undefined;
                                                        "subExpression"?: undefined;
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                } | {
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "commonType": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "leftExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "nodeType": string;
                                                            "operator": string;
                                                            "rightExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "hexValue"?: undefined;
                                                            "kind"?: undefined;
                                                            "subdenomination"?: undefined;
                                                            "value"?: undefined;
                                                            "name"?: undefined;
                                                            "overloadedDeclarations"?: undefined;
                                                            "referencedDeclaration"?: undefined;
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "prefix"?: undefined;
                                                        "subExpression"?: undefined;
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                })[];
                                            };
                                            "expression"?: undefined;
                                        })[];
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "trueBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": any[];
                                    };
                                }[];
                            };
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "initializationExpression": {
                                "assignments": number[];
                                "declarations": {
                                    "constant": boolean;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overrides": any;
                                    "scope": number;
                                    "src": string;
                                    "stateVariable": boolean;
                                    "storageLocation": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "value": any;
                                    "visibility": string;
                                }[];
                                "id": number;
                                "initialValue": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "nodeType": string;
                                "src": string;
                            };
                            "loopExpression": {
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "operator": string;
                                    "prefix": boolean;
                                    "src": string;
                                    "subExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "nodeType": string;
                                "src": string;
                            };
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "expression"?: undefined;
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "operator": string;
                                        "prefix": boolean;
                                        "src": string;
                                        "subExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": ({
                                    "assignments": number[];
                                    "declarations": {
                                        "constant": boolean;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overrides": any;
                                        "scope": number;
                                        "src": string;
                                        "stateVariable": boolean;
                                        "storageLocation": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": {
                                            "baseType": {
                                                "contractScope": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "length": any;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "value": any;
                                        "visibility": string;
                                    }[];
                                    "id": number;
                                    "initialValue": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "typeName": {
                                                "baseType": {
                                                    "contractScope": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "length": any;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "src": string;
                                    "body"?: undefined;
                                    "condition"?: undefined;
                                    "initializationExpression"?: undefined;
                                    "loopExpression"?: undefined;
                                    "expression"?: undefined;
                                } | {
                                    "body": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": ({
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftHandSide": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightHandSide": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "commonType": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftExpression": {
                                                            "argumentTypes": any;
                                                            "commonType": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "leftExpression": {
                                                                "argumentTypes": any;
                                                                "expression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "memberName": string;
                                                                "nodeType": string;
                                                                "referencedDeclaration": any;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "nodeType": string;
                                                            "operator": string;
                                                            "rightExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                            "condition"?: undefined;
                                            "falseBody"?: undefined;
                                            "trueBody"?: undefined;
                                        } | {
                                            "condition": {
                                                "argumentTypes": any;
                                                "commonType": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightExpression": {
                                                    "argumentTypes": any;
                                                    "commonType": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "leftExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "nodeType": string;
                                                    "operator": string;
                                                    "rightExpression": {
                                                        "argumentTypes": any;
                                                        "hexValue": string;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "kind": string;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "subdenomination": any;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "value": string;
                                                    };
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "falseBody": any;
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                            "trueBody": {
                                                "id": number;
                                                "nodeType": string;
                                                "src": string;
                                                "statements": {
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "baseExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "indexExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                }[];
                                            };
                                            "expression"?: undefined;
                                        })[];
                                    };
                                    "condition": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "initializationExpression": {
                                        "assignments": number[];
                                        "declarations": {
                                            "constant": boolean;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overrides": any;
                                            "scope": number;
                                            "src": string;
                                            "stateVariable": boolean;
                                            "storageLocation": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "typeName": {
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "value": any;
                                            "visibility": string;
                                        }[];
                                        "id": number;
                                        "initialValue": {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                        };
                                        "nodeType": string;
                                        "src": string;
                                    };
                                    "loopExpression": {
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "operator": string;
                                            "prefix": boolean;
                                            "src": string;
                                            "subExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                    };
                                    "nodeType": string;
                                    "src": string;
                                    "assignments"?: undefined;
                                    "declarations"?: undefined;
                                    "initialValue"?: undefined;
                                    "expression"?: undefined;
                                } | {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "arguments": {
                                                    "argumentTypes": any;
                                                    "arguments": ({
                                                        "argumentTypes": any;
                                                        "arguments": {
                                                            "argumentTypes": any;
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "expression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "memberName": string;
                                                                "nodeType": string;
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": any;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        }[];
                                                        "expression": {
                                                            "argumentTypes": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            }[];
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "typeName": {
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": any;
                                                                    "typeString": any;
                                                                };
                                                            };
                                                            "expression"?: undefined;
                                                            "memberName"?: undefined;
                                                            "referencedDeclaration"?: undefined;
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "kind": string;
                                                        "lValueRequested": boolean;
                                                        "names": any[];
                                                        "nodeType": string;
                                                        "src": string;
                                                        "tryCall": boolean;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    } | {
                                                        "argumentTypes": any;
                                                        "arguments": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        }[];
                                                        "expression": {
                                                            "argumentTypes": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            }[];
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": any;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "typeName"?: undefined;
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "kind": string;
                                                        "lValueRequested": boolean;
                                                        "names": any[];
                                                        "nodeType": string;
                                                        "src": string;
                                                        "tryCall": boolean;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    })[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "tryCall": boolean;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                }[];
                                                "expression": {
                                                    "argumentTypes": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": any;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "assignments"?: undefined;
                                    "declarations"?: undefined;
                                    "initialValue"?: undefined;
                                    "body"?: undefined;
                                    "condition"?: undefined;
                                    "initializationExpression"?: undefined;
                                    "loopExpression"?: undefined;
                                })[];
                            };
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "body": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": ({
                                    "condition": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "commonType": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "leftExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "nodeType": string;
                                            "operator": string;
                                            "rightExpression": {
                                                "argumentTypes": any;
                                                "commonType": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightExpression": {
                                                    "argumentTypes": any;
                                                    "hexValue": string;
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "subdenomination": any;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "value": string;
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "arguments"?: undefined;
                                        "expression"?: undefined;
                                        "kind"?: undefined;
                                        "names"?: undefined;
                                        "tryCall"?: undefined;
                                    };
                                    "falseBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": {
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftHandSide": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightHandSide": {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "baseExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "indexExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                        }[];
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "trueBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": {
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftHandSide": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightHandSide": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                        }[];
                                    };
                                } | {
                                    "condition": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "baseExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "indexExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "commonType"?: undefined;
                                        "leftExpression"?: undefined;
                                        "operator"?: undefined;
                                        "rightExpression"?: undefined;
                                    };
                                    "falseBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": {
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftHandSide": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "baseExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "indexExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightHandSide": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                        }[];
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "trueBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": ({
                                            "expression": {
                                                "argumentTypes": any;
                                                "arguments": ({
                                                    "argumentTypes": any;
                                                    "arguments": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "baseExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "indexExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "tryCall": boolean;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "name"?: undefined;
                                                    "overloadedDeclarations"?: undefined;
                                                    "referencedDeclaration"?: undefined;
                                                } | {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "arguments"?: undefined;
                                                    "expression"?: undefined;
                                                    "isConstant"?: undefined;
                                                    "isLValue"?: undefined;
                                                    "isPure"?: undefined;
                                                    "kind"?: undefined;
                                                    "lValueRequested"?: undefined;
                                                    "names"?: undefined;
                                                    "tryCall"?: undefined;
                                                })[];
                                                "expression": {
                                                    "argumentTypes": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    }[];
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                            "eventCall"?: undefined;
                                        } | {
                                            "eventCall": {
                                                "argumentTypes": any;
                                                "arguments": ({
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "expression"?: undefined;
                                                    "isConstant"?: undefined;
                                                    "isLValue"?: undefined;
                                                    "isPure"?: undefined;
                                                    "lValueRequested"?: undefined;
                                                    "memberName"?: undefined;
                                                } | {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "baseExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "indexExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "name"?: undefined;
                                                    "overloadedDeclarations"?: undefined;
                                                })[];
                                                "expression": {
                                                    "argumentTypes": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    }[];
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                            "expression"?: undefined;
                                        })[];
                                    };
                                })[];
                            };
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "initializationExpression": {
                                "assignments": number[];
                                "declarations": {
                                    "constant": boolean;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overrides": any;
                                    "scope": number;
                                    "src": string;
                                    "stateVariable": boolean;
                                    "storageLocation": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "value": any;
                                    "visibility": string;
                                }[];
                                "id": number;
                                "initialValue": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "nodeType": string;
                                "src": string;
                            };
                            "loopExpression": {
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "operator": string;
                                    "prefix": boolean;
                                    "src": string;
                                    "subExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "nodeType": string;
                                "src": string;
                            };
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        })[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "functionSelector"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "baseFunctions": number[];
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "arguments": ({
                                                    "argumentTypes": any;
                                                    "arguments": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": any;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "typeName": {
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": any;
                                                                "typeString": any;
                                                            };
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "tryCall": boolean;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "name"?: undefined;
                                                    "overloadedDeclarations"?: undefined;
                                                    "referencedDeclaration"?: undefined;
                                                } | {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "arguments"?: undefined;
                                                    "expression"?: undefined;
                                                    "isConstant"?: undefined;
                                                    "isLValue"?: undefined;
                                                    "isPure"?: undefined;
                                                    "kind"?: undefined;
                                                    "lValueRequested"?: undefined;
                                                    "names"?: undefined;
                                                    "tryCall"?: undefined;
                                                })[];
                                                "expression": {
                                                    "argumentTypes": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        })[];
                    };
                    "documentation": string;
                    "functionSelector": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": {
                        "id": number;
                        "nodeType": string;
                        "overrides": any[];
                        "src": string;
                    };
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                } | {
                    "baseFunctions": number[];
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "arguments": ({
                                                    "argumentTypes": any;
                                                    "arguments": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": any;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "typeName": {
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": any;
                                                                "typeString": any;
                                                            };
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "tryCall": boolean;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "name"?: undefined;
                                                    "overloadedDeclarations"?: undefined;
                                                    "referencedDeclaration"?: undefined;
                                                } | {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "arguments"?: undefined;
                                                    "expression"?: undefined;
                                                    "isConstant"?: undefined;
                                                    "isLValue"?: undefined;
                                                    "isPure"?: undefined;
                                                    "kind"?: undefined;
                                                    "lValueRequested"?: undefined;
                                                    "names"?: undefined;
                                                    "tryCall"?: undefined;
                                                })[];
                                                "expression": {
                                                    "argumentTypes": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "components"?: undefined;
                                    "isConstant"?: undefined;
                                    "isInlineArray"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "components": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isInlineArray": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "baseExpression"?: undefined;
                                "indexExpression"?: undefined;
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                                "hexValue"?: undefined;
                                "subdenomination"?: undefined;
                                "value"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "arguments": ({
                                                    "argumentTypes": any;
                                                    "arguments": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": any;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "typeName": {
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": any;
                                                                "typeString": any;
                                                            };
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "tryCall": boolean;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "name"?: undefined;
                                                    "overloadedDeclarations"?: undefined;
                                                    "referencedDeclaration"?: undefined;
                                                } | {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "arguments"?: undefined;
                                                    "expression"?: undefined;
                                                    "isConstant"?: undefined;
                                                    "isLValue"?: undefined;
                                                    "isPure"?: undefined;
                                                    "kind"?: undefined;
                                                    "lValueRequested"?: undefined;
                                                    "names"?: undefined;
                                                    "tryCall"?: undefined;
                                                })[];
                                                "expression": {
                                                    "argumentTypes": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                                "hexValue"?: undefined;
                                "subdenomination"?: undefined;
                                "value"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "baseType": {
                                        "contractScope": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "length": any;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "components"?: undefined;
                                    "isConstant"?: undefined;
                                    "isInlineArray"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "components": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": any;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isInlineArray": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "baseExpression"?: undefined;
                                "indexExpression"?: undefined;
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                                "hexValue"?: undefined;
                                "subdenomination"?: undefined;
                                "value"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "baseType": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "length": any;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "baseType": {
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "length": any;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "expression"?: undefined;
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "baseExpression"?: undefined;
                                "indexExpression"?: undefined;
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                                "hexValue"?: undefined;
                                "subdenomination"?: undefined;
                                "value"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                    "typeName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "memberName": string;
                                "nodeType": string;
                                "referencedDeclaration": any;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                                "baseExpression"?: undefined;
                                "indexExpression"?: undefined;
                                "hexValue"?: undefined;
                                "subdenomination"?: undefined;
                                "value"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "body": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": ({
                                    "assignments": number[];
                                    "declarations": {
                                        "constant": boolean;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overrides": any;
                                        "scope": number;
                                        "src": string;
                                        "stateVariable": boolean;
                                        "storageLocation": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": {
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "value": any;
                                        "visibility": string;
                                    }[];
                                    "id": number;
                                    "initialValue": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "src": string;
                                    "body"?: undefined;
                                    "condition"?: undefined;
                                    "initializationExpression"?: undefined;
                                    "loopExpression"?: undefined;
                                } | {
                                    "body": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": ({
                                            "condition": {
                                                "argumentTypes": any;
                                                "commonType": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightExpression": {
                                                    "argumentTypes": any;
                                                    "hexValue": string;
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "subdenomination": any;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "value": string;
                                                    "expression"?: undefined;
                                                    "memberName"?: undefined;
                                                    "referencedDeclaration"?: undefined;
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "falseBody": any;
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                            "trueBody": {
                                                "id": number;
                                                "nodeType": string;
                                                "src": string;
                                                "statements": {
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                }[];
                                            };
                                        } | {
                                            "condition": {
                                                "argumentTypes": any;
                                                "commonType": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightExpression": {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "baseExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "indexExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                    "hexValue"?: undefined;
                                                    "kind"?: undefined;
                                                    "subdenomination"?: undefined;
                                                    "value"?: undefined;
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "falseBody": any;
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                            "trueBody": {
                                                "id": number;
                                                "nodeType": string;
                                                "src": string;
                                                "statements": ({
                                                    "assignments": number[];
                                                    "declarations": {
                                                        "constant": boolean;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overrides": any;
                                                        "scope": number;
                                                        "src": string;
                                                        "stateVariable": boolean;
                                                        "storageLocation": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "typeName": {
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "value": any;
                                                        "visibility": string;
                                                    }[];
                                                    "id": number;
                                                    "initialValue": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "baseExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "indexExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "nodeType": string;
                                                    "src": string;
                                                    "condition"?: undefined;
                                                    "falseBody"?: undefined;
                                                    "trueBody"?: undefined;
                                                } | {
                                                    "condition": {
                                                        "argumentTypes": any;
                                                        "commonType": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightExpression": {
                                                            "argumentTypes": any;
                                                            "hexValue": string;
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "kind": string;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "subdenomination": any;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "value": string;
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "falseBody": any;
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "trueBody": {
                                                        "id": number;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "statements": {
                                                            "condition": {
                                                                "argumentTypes": any;
                                                                "commonType": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "leftExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "nodeType": string;
                                                                "operator": string;
                                                                "rightExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "falseBody": {
                                                                "id": number;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "statements": ({
                                                                    "expression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "isConstant": boolean;
                                                                        "isLValue": boolean;
                                                                        "isPure": boolean;
                                                                        "lValueRequested": boolean;
                                                                        "leftHandSide": {
                                                                            "argumentTypes": any;
                                                                            "expression": {
                                                                                "argumentTypes": any;
                                                                                "baseExpression": {
                                                                                    "argumentTypes": any;
                                                                                    "id": number;
                                                                                    "name": string;
                                                                                    "nodeType": string;
                                                                                    "overloadedDeclarations": any[];
                                                                                    "referencedDeclaration": number;
                                                                                    "src": string;
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": string;
                                                                                        "typeString": string;
                                                                                    };
                                                                                };
                                                                                "id": number;
                                                                                "indexExpression": {
                                                                                    "argumentTypes": any;
                                                                                    "id": number;
                                                                                    "name": string;
                                                                                    "nodeType": string;
                                                                                    "overloadedDeclarations": any[];
                                                                                    "referencedDeclaration": number;
                                                                                    "src": string;
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": string;
                                                                                        "typeString": string;
                                                                                    };
                                                                                };
                                                                                "isConstant": boolean;
                                                                                "isLValue": boolean;
                                                                                "isPure": boolean;
                                                                                "lValueRequested": boolean;
                                                                                "nodeType": string;
                                                                                "src": string;
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": string;
                                                                                    "typeString": string;
                                                                                };
                                                                            };
                                                                            "id": number;
                                                                            "isConstant": boolean;
                                                                            "isLValue": boolean;
                                                                            "isPure": boolean;
                                                                            "lValueRequested": boolean;
                                                                            "memberName": string;
                                                                            "nodeType": string;
                                                                            "referencedDeclaration": number;
                                                                            "src": string;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "baseExpression"?: undefined;
                                                                            "indexExpression"?: undefined;
                                                                            "name"?: undefined;
                                                                            "overloadedDeclarations"?: undefined;
                                                                        };
                                                                        "nodeType": string;
                                                                        "operator": string;
                                                                        "rightHandSide": {
                                                                            "argumentTypes": any;
                                                                            "commonType": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "id": number;
                                                                            "isConstant": boolean;
                                                                            "isLValue": boolean;
                                                                            "isPure": boolean;
                                                                            "lValueRequested": boolean;
                                                                            "leftExpression": {
                                                                                "argumentTypes": any;
                                                                                "id": number;
                                                                                "name": string;
                                                                                "nodeType": string;
                                                                                "overloadedDeclarations": any[];
                                                                                "referencedDeclaration": number;
                                                                                "src": string;
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": string;
                                                                                    "typeString": string;
                                                                                };
                                                                            };
                                                                            "nodeType": string;
                                                                            "operator": string;
                                                                            "rightExpression": {
                                                                                "argumentTypes": any;
                                                                                "id": number;
                                                                                "name": string;
                                                                                "nodeType": string;
                                                                                "overloadedDeclarations": any[];
                                                                                "referencedDeclaration": number;
                                                                                "src": string;
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": string;
                                                                                    "typeString": string;
                                                                                };
                                                                            };
                                                                            "src": string;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "name"?: undefined;
                                                                            "overloadedDeclarations"?: undefined;
                                                                            "referencedDeclaration"?: undefined;
                                                                            "hexValue"?: undefined;
                                                                            "kind"?: undefined;
                                                                            "subdenomination"?: undefined;
                                                                            "value"?: undefined;
                                                                        };
                                                                        "src": string;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                    };
                                                                    "id": number;
                                                                    "nodeType": string;
                                                                    "src": string;
                                                                } | {
                                                                    "expression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "isConstant": boolean;
                                                                        "isLValue": boolean;
                                                                        "isPure": boolean;
                                                                        "lValueRequested": boolean;
                                                                        "leftHandSide": {
                                                                            "argumentTypes": any;
                                                                            "baseExpression": {
                                                                                "argumentTypes": any;
                                                                                "id": number;
                                                                                "name": string;
                                                                                "nodeType": string;
                                                                                "overloadedDeclarations": any[];
                                                                                "referencedDeclaration": number;
                                                                                "src": string;
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": string;
                                                                                    "typeString": string;
                                                                                };
                                                                            };
                                                                            "id": number;
                                                                            "indexExpression": {
                                                                                "argumentTypes": any;
                                                                                "id": number;
                                                                                "name": string;
                                                                                "nodeType": string;
                                                                                "overloadedDeclarations": any[];
                                                                                "referencedDeclaration": number;
                                                                                "src": string;
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": string;
                                                                                    "typeString": string;
                                                                                };
                                                                            };
                                                                            "isConstant": boolean;
                                                                            "isLValue": boolean;
                                                                            "isPure": boolean;
                                                                            "lValueRequested": boolean;
                                                                            "nodeType": string;
                                                                            "src": string;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "expression"?: undefined;
                                                                            "memberName"?: undefined;
                                                                            "referencedDeclaration"?: undefined;
                                                                            "name"?: undefined;
                                                                            "overloadedDeclarations"?: undefined;
                                                                        };
                                                                        "nodeType": string;
                                                                        "operator": string;
                                                                        "rightHandSide": {
                                                                            "argumentTypes": any;
                                                                            "id": number;
                                                                            "name": string;
                                                                            "nodeType": string;
                                                                            "overloadedDeclarations": any[];
                                                                            "referencedDeclaration": number;
                                                                            "src": string;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "commonType"?: undefined;
                                                                            "isConstant"?: undefined;
                                                                            "isLValue"?: undefined;
                                                                            "isPure"?: undefined;
                                                                            "lValueRequested"?: undefined;
                                                                            "leftExpression"?: undefined;
                                                                            "operator"?: undefined;
                                                                            "rightExpression"?: undefined;
                                                                            "hexValue"?: undefined;
                                                                            "kind"?: undefined;
                                                                            "subdenomination"?: undefined;
                                                                            "value"?: undefined;
                                                                        };
                                                                        "src": string;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                    };
                                                                    "id": number;
                                                                    "nodeType": string;
                                                                    "src": string;
                                                                } | {
                                                                    "expression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "isConstant": boolean;
                                                                        "isLValue": boolean;
                                                                        "isPure": boolean;
                                                                        "lValueRequested": boolean;
                                                                        "leftHandSide": {
                                                                            "argumentTypes": any;
                                                                            "id": number;
                                                                            "name": string;
                                                                            "nodeType": string;
                                                                            "overloadedDeclarations": any[];
                                                                            "referencedDeclaration": number;
                                                                            "src": string;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "expression"?: undefined;
                                                                            "isConstant"?: undefined;
                                                                            "isLValue"?: undefined;
                                                                            "isPure"?: undefined;
                                                                            "lValueRequested"?: undefined;
                                                                            "memberName"?: undefined;
                                                                            "baseExpression"?: undefined;
                                                                            "indexExpression"?: undefined;
                                                                        };
                                                                        "nodeType": string;
                                                                        "operator": string;
                                                                        "rightHandSide": {
                                                                            "argumentTypes": any;
                                                                            "hexValue": string;
                                                                            "id": number;
                                                                            "isConstant": boolean;
                                                                            "isLValue": boolean;
                                                                            "isPure": boolean;
                                                                            "kind": string;
                                                                            "lValueRequested": boolean;
                                                                            "nodeType": string;
                                                                            "src": string;
                                                                            "subdenomination": any;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "value": string;
                                                                            "commonType"?: undefined;
                                                                            "leftExpression"?: undefined;
                                                                            "operator"?: undefined;
                                                                            "rightExpression"?: undefined;
                                                                            "name"?: undefined;
                                                                            "overloadedDeclarations"?: undefined;
                                                                            "referencedDeclaration"?: undefined;
                                                                        };
                                                                        "src": string;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                    };
                                                                    "id": number;
                                                                    "nodeType": string;
                                                                    "src": string;
                                                                } | {
                                                                    "id": number;
                                                                    "nodeType": string;
                                                                    "src": string;
                                                                    "expression"?: undefined;
                                                                })[];
                                                            };
                                                            "id": number;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "trueBody": {
                                                                "id": number;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "statements": ({
                                                                    "expression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "isConstant": boolean;
                                                                        "isLValue": boolean;
                                                                        "isPure": boolean;
                                                                        "lValueRequested": boolean;
                                                                        "leftHandSide": {
                                                                            "argumentTypes": any;
                                                                            "id": number;
                                                                            "name": string;
                                                                            "nodeType": string;
                                                                            "overloadedDeclarations": any[];
                                                                            "referencedDeclaration": number;
                                                                            "src": string;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "expression"?: undefined;
                                                                            "isConstant"?: undefined;
                                                                            "isLValue"?: undefined;
                                                                            "isPure"?: undefined;
                                                                            "lValueRequested"?: undefined;
                                                                            "memberName"?: undefined;
                                                                            "baseExpression"?: undefined;
                                                                            "indexExpression"?: undefined;
                                                                        };
                                                                        "nodeType": string;
                                                                        "operator": string;
                                                                        "rightHandSide": {
                                                                            "argumentTypes": any;
                                                                            "id": number;
                                                                            "name": string;
                                                                            "nodeType": string;
                                                                            "overloadedDeclarations": any[];
                                                                            "referencedDeclaration": number;
                                                                            "src": string;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "hexValue"?: undefined;
                                                                            "isConstant"?: undefined;
                                                                            "isLValue"?: undefined;
                                                                            "isPure"?: undefined;
                                                                            "kind"?: undefined;
                                                                            "lValueRequested"?: undefined;
                                                                            "subdenomination"?: undefined;
                                                                            "value"?: undefined;
                                                                        };
                                                                        "src": string;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                        "prefix"?: undefined;
                                                                        "subExpression"?: undefined;
                                                                    };
                                                                    "id": number;
                                                                    "nodeType": string;
                                                                    "src": string;
                                                                } | {
                                                                    "expression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "isConstant": boolean;
                                                                        "isLValue": boolean;
                                                                        "isPure": boolean;
                                                                        "lValueRequested": boolean;
                                                                        "leftHandSide": {
                                                                            "argumentTypes": any;
                                                                            "expression": {
                                                                                "argumentTypes": any;
                                                                                "baseExpression": {
                                                                                    "argumentTypes": any;
                                                                                    "id": number;
                                                                                    "name": string;
                                                                                    "nodeType": string;
                                                                                    "overloadedDeclarations": any[];
                                                                                    "referencedDeclaration": number;
                                                                                    "src": string;
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": string;
                                                                                        "typeString": string;
                                                                                    };
                                                                                };
                                                                                "id": number;
                                                                                "indexExpression": {
                                                                                    "argumentTypes": any;
                                                                                    "id": number;
                                                                                    "name": string;
                                                                                    "nodeType": string;
                                                                                    "overloadedDeclarations": any[];
                                                                                    "referencedDeclaration": number;
                                                                                    "src": string;
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": string;
                                                                                        "typeString": string;
                                                                                    };
                                                                                };
                                                                                "isConstant": boolean;
                                                                                "isLValue": boolean;
                                                                                "isPure": boolean;
                                                                                "lValueRequested": boolean;
                                                                                "nodeType": string;
                                                                                "src": string;
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": string;
                                                                                    "typeString": string;
                                                                                };
                                                                            };
                                                                            "id": number;
                                                                            "isConstant": boolean;
                                                                            "isLValue": boolean;
                                                                            "isPure": boolean;
                                                                            "lValueRequested": boolean;
                                                                            "memberName": string;
                                                                            "nodeType": string;
                                                                            "referencedDeclaration": number;
                                                                            "src": string;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "name"?: undefined;
                                                                            "overloadedDeclarations"?: undefined;
                                                                            "baseExpression"?: undefined;
                                                                            "indexExpression"?: undefined;
                                                                        };
                                                                        "nodeType": string;
                                                                        "operator": string;
                                                                        "rightHandSide": {
                                                                            "argumentTypes": any;
                                                                            "hexValue": string;
                                                                            "id": number;
                                                                            "isConstant": boolean;
                                                                            "isLValue": boolean;
                                                                            "isPure": boolean;
                                                                            "kind": string;
                                                                            "lValueRequested": boolean;
                                                                            "nodeType": string;
                                                                            "src": string;
                                                                            "subdenomination": any;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "value": string;
                                                                            "name"?: undefined;
                                                                            "overloadedDeclarations"?: undefined;
                                                                            "referencedDeclaration"?: undefined;
                                                                        };
                                                                        "src": string;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                        "prefix"?: undefined;
                                                                        "subExpression"?: undefined;
                                                                    };
                                                                    "id": number;
                                                                    "nodeType": string;
                                                                    "src": string;
                                                                } | {
                                                                    "expression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "isConstant": boolean;
                                                                        "isLValue": boolean;
                                                                        "isPure": boolean;
                                                                        "lValueRequested": boolean;
                                                                        "nodeType": string;
                                                                        "operator": string;
                                                                        "prefix": boolean;
                                                                        "src": string;
                                                                        "subExpression": {
                                                                            "argumentTypes": any;
                                                                            "id": number;
                                                                            "name": string;
                                                                            "nodeType": string;
                                                                            "overloadedDeclarations": any[];
                                                                            "referencedDeclaration": number;
                                                                            "src": string;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                        };
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                        "leftHandSide"?: undefined;
                                                                        "rightHandSide"?: undefined;
                                                                    };
                                                                    "id": number;
                                                                    "nodeType": string;
                                                                    "src": string;
                                                                } | {
                                                                    "expression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "isConstant": boolean;
                                                                        "isLValue": boolean;
                                                                        "isPure": boolean;
                                                                        "lValueRequested": boolean;
                                                                        "leftHandSide": {
                                                                            "argumentTypes": any;
                                                                            "baseExpression": {
                                                                                "argumentTypes": any;
                                                                                "id": number;
                                                                                "name": string;
                                                                                "nodeType": string;
                                                                                "overloadedDeclarations": any[];
                                                                                "referencedDeclaration": number;
                                                                                "src": string;
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": string;
                                                                                    "typeString": string;
                                                                                };
                                                                            };
                                                                            "id": number;
                                                                            "indexExpression": {
                                                                                "argumentTypes": any;
                                                                                "id": number;
                                                                                "name": string;
                                                                                "nodeType": string;
                                                                                "overloadedDeclarations": any[];
                                                                                "referencedDeclaration": number;
                                                                                "src": string;
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": string;
                                                                                    "typeString": string;
                                                                                };
                                                                            };
                                                                            "isConstant": boolean;
                                                                            "isLValue": boolean;
                                                                            "isPure": boolean;
                                                                            "lValueRequested": boolean;
                                                                            "nodeType": string;
                                                                            "src": string;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "name"?: undefined;
                                                                            "overloadedDeclarations"?: undefined;
                                                                            "referencedDeclaration"?: undefined;
                                                                            "expression"?: undefined;
                                                                            "memberName"?: undefined;
                                                                        };
                                                                        "nodeType": string;
                                                                        "operator": string;
                                                                        "rightHandSide": {
                                                                            "argumentTypes": any;
                                                                            "id": number;
                                                                            "name": string;
                                                                            "nodeType": string;
                                                                            "overloadedDeclarations": any[];
                                                                            "referencedDeclaration": number;
                                                                            "src": string;
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": string;
                                                                                "typeString": string;
                                                                            };
                                                                            "hexValue"?: undefined;
                                                                            "isConstant"?: undefined;
                                                                            "isLValue"?: undefined;
                                                                            "isPure"?: undefined;
                                                                            "kind"?: undefined;
                                                                            "lValueRequested"?: undefined;
                                                                            "subdenomination"?: undefined;
                                                                            "value"?: undefined;
                                                                        };
                                                                        "src": string;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                        "prefix"?: undefined;
                                                                        "subExpression"?: undefined;
                                                                    };
                                                                    "id": number;
                                                                    "nodeType": string;
                                                                    "src": string;
                                                                } | {
                                                                    "id": number;
                                                                    "nodeType": string;
                                                                    "src": string;
                                                                    "expression"?: undefined;
                                                                })[];
                                                            };
                                                        }[];
                                                    };
                                                    "assignments"?: undefined;
                                                    "declarations"?: undefined;
                                                    "initialValue"?: undefined;
                                                })[];
                                            };
                                        })[];
                                    };
                                    "condition": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "initializationExpression": {
                                        "assignments": number[];
                                        "declarations": {
                                            "constant": boolean;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overrides": any;
                                            "scope": number;
                                            "src": string;
                                            "stateVariable": boolean;
                                            "storageLocation": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "typeName": {
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "value": any;
                                            "visibility": string;
                                        }[];
                                        "id": number;
                                        "initialValue": {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                        };
                                        "nodeType": string;
                                        "src": string;
                                    };
                                    "loopExpression": {
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "operator": string;
                                            "prefix": boolean;
                                            "src": string;
                                            "subExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                    };
                                    "nodeType": string;
                                    "src": string;
                                    "assignments"?: undefined;
                                    "declarations"?: undefined;
                                    "initialValue"?: undefined;
                                })[];
                            };
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "initializationExpression": {
                                "assignments": number[];
                                "declarations": {
                                    "constant": boolean;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overrides": any;
                                    "scope": number;
                                    "src": string;
                                    "stateVariable": boolean;
                                    "storageLocation": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "value": any;
                                    "visibility": string;
                                }[];
                                "id": number;
                                "initialValue": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "nodeType": string;
                                "src": string;
                            };
                            "loopExpression": {
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "operator": string;
                                    "prefix": boolean;
                                    "src": string;
                                    "subExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "nodeType": string;
                                "src": string;
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "body": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": ({
                                    "condition": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "falseBody": any;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "trueBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": {
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                        }[];
                                    };
                                    "assignments"?: undefined;
                                    "declarations"?: undefined;
                                    "initialValue"?: undefined;
                                } | {
                                    "assignments": number[];
                                    "declarations": {
                                        "constant": boolean;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overrides": any;
                                        "scope": number;
                                        "src": string;
                                        "stateVariable": boolean;
                                        "storageLocation": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": {
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "value": any;
                                        "visibility": string;
                                    }[];
                                    "id": number;
                                    "initialValue": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "src": string;
                                    "condition"?: undefined;
                                    "falseBody"?: undefined;
                                    "trueBody"?: undefined;
                                } | {
                                    "condition": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "falseBody": any;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "trueBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": {
                                            "condition": {
                                                "argumentTypes": any;
                                                "commonType": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "falseBody": {
                                                "id": number;
                                                "nodeType": string;
                                                "src": string;
                                                "statements": ({
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "baseExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "indexExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "baseExpression"?: undefined;
                                                            "indexExpression"?: undefined;
                                                            "name"?: undefined;
                                                            "overloadedDeclarations"?: undefined;
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "commonType": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "leftExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "nodeType": string;
                                                            "operator": string;
                                                            "rightExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "name"?: undefined;
                                                            "overloadedDeclarations"?: undefined;
                                                            "referencedDeclaration"?: undefined;
                                                            "hexValue"?: undefined;
                                                            "kind"?: undefined;
                                                            "subdenomination"?: undefined;
                                                            "value"?: undefined;
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                } | {
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "baseExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "indexExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "expression"?: undefined;
                                                            "memberName"?: undefined;
                                                            "referencedDeclaration"?: undefined;
                                                            "name"?: undefined;
                                                            "overloadedDeclarations"?: undefined;
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "commonType"?: undefined;
                                                            "isConstant"?: undefined;
                                                            "isLValue"?: undefined;
                                                            "isPure"?: undefined;
                                                            "lValueRequested"?: undefined;
                                                            "leftExpression"?: undefined;
                                                            "operator"?: undefined;
                                                            "rightExpression"?: undefined;
                                                            "hexValue"?: undefined;
                                                            "kind"?: undefined;
                                                            "subdenomination"?: undefined;
                                                            "value"?: undefined;
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                } | {
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "expression"?: undefined;
                                                            "isConstant"?: undefined;
                                                            "isLValue"?: undefined;
                                                            "isPure"?: undefined;
                                                            "lValueRequested"?: undefined;
                                                            "memberName"?: undefined;
                                                            "baseExpression"?: undefined;
                                                            "indexExpression"?: undefined;
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "hexValue": string;
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "kind": string;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "subdenomination": any;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "value": string;
                                                            "commonType"?: undefined;
                                                            "leftExpression"?: undefined;
                                                            "operator"?: undefined;
                                                            "rightExpression"?: undefined;
                                                            "name"?: undefined;
                                                            "overloadedDeclarations"?: undefined;
                                                            "referencedDeclaration"?: undefined;
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                })[];
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                            "trueBody": {
                                                "id": number;
                                                "nodeType": string;
                                                "src": string;
                                                "statements": ({
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "expression"?: undefined;
                                                            "isConstant"?: undefined;
                                                            "isLValue"?: undefined;
                                                            "isPure"?: undefined;
                                                            "lValueRequested"?: undefined;
                                                            "memberName"?: undefined;
                                                            "baseExpression"?: undefined;
                                                            "indexExpression"?: undefined;
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "hexValue"?: undefined;
                                                            "isConstant"?: undefined;
                                                            "isLValue"?: undefined;
                                                            "isPure"?: undefined;
                                                            "kind"?: undefined;
                                                            "lValueRequested"?: undefined;
                                                            "subdenomination"?: undefined;
                                                            "value"?: undefined;
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "prefix"?: undefined;
                                                        "subExpression"?: undefined;
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                } | {
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "baseExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "indexExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "name"?: undefined;
                                                            "overloadedDeclarations"?: undefined;
                                                            "baseExpression"?: undefined;
                                                            "indexExpression"?: undefined;
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "hexValue": string;
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "kind": string;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "subdenomination": any;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "value": string;
                                                            "name"?: undefined;
                                                            "overloadedDeclarations"?: undefined;
                                                            "referencedDeclaration"?: undefined;
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "prefix"?: undefined;
                                                        "subExpression"?: undefined;
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                } | {
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "prefix": boolean;
                                                        "src": string;
                                                        "subExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "leftHandSide"?: undefined;
                                                        "rightHandSide"?: undefined;
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                } | {
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "baseExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "indexExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "name"?: undefined;
                                                            "overloadedDeclarations"?: undefined;
                                                            "referencedDeclaration"?: undefined;
                                                            "expression"?: undefined;
                                                            "memberName"?: undefined;
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "hexValue"?: undefined;
                                                            "isConstant"?: undefined;
                                                            "isLValue"?: undefined;
                                                            "isPure"?: undefined;
                                                            "kind"?: undefined;
                                                            "lValueRequested"?: undefined;
                                                            "subdenomination"?: undefined;
                                                            "value"?: undefined;
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "prefix"?: undefined;
                                                        "subExpression"?: undefined;
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                })[];
                                            };
                                        }[];
                                    };
                                    "assignments"?: undefined;
                                    "declarations"?: undefined;
                                    "initialValue"?: undefined;
                                })[];
                            };
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "expression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "memberName"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "initializationExpression": {
                                "assignments": number[];
                                "declarations": {
                                    "constant": boolean;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overrides": any;
                                    "scope": number;
                                    "src": string;
                                    "stateVariable": boolean;
                                    "storageLocation": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "value": any;
                                    "visibility": string;
                                }[];
                                "id": number;
                                "initialValue": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "nodeType": string;
                                "src": string;
                            };
                            "loopExpression": {
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "operator": string;
                                    "prefix": boolean;
                                    "src": string;
                                    "subExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "nodeType": string;
                                "src": string;
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "expression"?: undefined;
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": any;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "typeName": {
                                                    "baseType": {
                                                        "contractScope": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "length": any;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overrides": any;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                                "baseExpression"?: undefined;
                                "indexExpression"?: undefined;
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "body": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": ({
                                    "condition": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "baseExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "indexExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "baseExpression"?: undefined;
                                            "indexExpression"?: undefined;
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "falseBody": any;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "trueBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": ({
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "leftHandSide": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "nodeType": string;
                                                "operator": string;
                                                "rightHandSide": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "prefix"?: undefined;
                                                "subExpression"?: undefined;
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                        } | {
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "operator": string;
                                                "prefix": boolean;
                                                "src": string;
                                                "subExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "leftHandSide"?: undefined;
                                                "rightHandSide"?: undefined;
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                        })[];
                                    };
                                } | {
                                    "condition": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "expression"?: undefined;
                                            "memberName"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "falseBody": any;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "trueBody": {
                                        "id": number;
                                        "nodeType": string;
                                        "src": string;
                                        "statements": {
                                            "condition": {
                                                "argumentTypes": any;
                                                "arguments": {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "baseExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "indexExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                }[];
                                                "expression": {
                                                    "argumentTypes": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    }[];
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "falseBody": {
                                                "id": number;
                                                "nodeType": string;
                                                "src": string;
                                                "statements": {
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "leftHandSide": {
                                                            "argumentTypes": any;
                                                            "baseExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "indexExpression": {
                                                                "argumentTypes": any;
                                                                "expression": {
                                                                    "argumentTypes": any;
                                                                    "baseExpression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "name": string;
                                                                        "nodeType": string;
                                                                        "overloadedDeclarations": any[];
                                                                        "referencedDeclaration": number;
                                                                        "src": string;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                    };
                                                                    "id": number;
                                                                    "indexExpression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "name": string;
                                                                        "nodeType": string;
                                                                        "overloadedDeclarations": any[];
                                                                        "referencedDeclaration": number;
                                                                        "src": string;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                    };
                                                                    "isConstant": boolean;
                                                                    "isLValue": boolean;
                                                                    "isPure": boolean;
                                                                    "lValueRequested": boolean;
                                                                    "nodeType": string;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "memberName": string;
                                                                "nodeType": string;
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "nodeType": string;
                                                        "operator": string;
                                                        "rightHandSide": {
                                                            "argumentTypes": any;
                                                            "baseExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "indexExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                }[];
                                            };
                                            "id": number;
                                            "nodeType": string;
                                            "src": string;
                                            "trueBody": {
                                                "id": number;
                                                "nodeType": string;
                                                "src": string;
                                                "statements": ({
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "arguments": ({
                                                            "argumentTypes": any;
                                                            "arguments": {
                                                                "argumentTypes": any;
                                                                "expression": {
                                                                    "argumentTypes": any;
                                                                    "baseExpression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "name": string;
                                                                        "nodeType": string;
                                                                        "overloadedDeclarations": any[];
                                                                        "referencedDeclaration": number;
                                                                        "src": string;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                    };
                                                                    "id": number;
                                                                    "indexExpression": {
                                                                        "argumentTypes": any;
                                                                        "id": number;
                                                                        "name": string;
                                                                        "nodeType": string;
                                                                        "overloadedDeclarations": any[];
                                                                        "referencedDeclaration": number;
                                                                        "src": string;
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": string;
                                                                            "typeString": string;
                                                                        };
                                                                    };
                                                                    "isConstant": boolean;
                                                                    "isLValue": boolean;
                                                                    "isPure": boolean;
                                                                    "lValueRequested": boolean;
                                                                    "nodeType": string;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "memberName": string;
                                                                "nodeType": string;
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            }[];
                                                            "expression": {
                                                                "argumentTypes": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                }[];
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "kind": string;
                                                            "lValueRequested": boolean;
                                                            "names": any[];
                                                            "nodeType": string;
                                                            "src": string;
                                                            "tryCall": boolean;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "baseExpression"?: undefined;
                                                            "indexExpression"?: undefined;
                                                        } | {
                                                            "argumentTypes": any;
                                                            "baseExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "indexExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "arguments"?: undefined;
                                                            "expression"?: undefined;
                                                            "kind"?: undefined;
                                                            "names"?: undefined;
                                                            "tryCall"?: undefined;
                                                        })[];
                                                        "expression": {
                                                            "argumentTypes": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            }[];
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "kind": string;
                                                        "lValueRequested": boolean;
                                                        "names": any[];
                                                        "nodeType": string;
                                                        "src": string;
                                                        "tryCall": boolean;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "eventCall"?: undefined;
                                                } | {
                                                    "eventCall": {
                                                        "argumentTypes": any;
                                                        "arguments": ({
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "expression"?: undefined;
                                                            "isConstant"?: undefined;
                                                            "isLValue"?: undefined;
                                                            "isPure"?: undefined;
                                                            "lValueRequested"?: undefined;
                                                            "memberName"?: undefined;
                                                            "baseExpression"?: undefined;
                                                            "indexExpression"?: undefined;
                                                        } | {
                                                            "argumentTypes": any;
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "baseExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "indexExpression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "name"?: undefined;
                                                            "overloadedDeclarations"?: undefined;
                                                            "baseExpression"?: undefined;
                                                            "indexExpression"?: undefined;
                                                        } | {
                                                            "argumentTypes": any;
                                                            "baseExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "indexExpression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "name"?: undefined;
                                                            "overloadedDeclarations"?: undefined;
                                                            "referencedDeclaration"?: undefined;
                                                            "expression"?: undefined;
                                                            "memberName"?: undefined;
                                                        })[];
                                                        "expression": {
                                                            "argumentTypes": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            }[];
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "kind": string;
                                                        "lValueRequested": boolean;
                                                        "names": any[];
                                                        "nodeType": string;
                                                        "src": string;
                                                        "tryCall": boolean;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "expression"?: undefined;
                                                })[];
                                            };
                                        }[];
                                    };
                                })[];
                            };
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "expression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "memberName"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "initializationExpression": {
                                "assignments": number[];
                                "declarations": {
                                    "constant": boolean;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overrides": any;
                                    "scope": number;
                                    "src": string;
                                    "stateVariable": boolean;
                                    "storageLocation": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "value": any;
                                    "visibility": string;
                                }[];
                                "id": number;
                                "initialValue": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "nodeType": string;
                                "src": string;
                            };
                            "loopExpression": {
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "operator": string;
                                    "prefix": boolean;
                                    "src": string;
                                    "subExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "nodeType": string;
                                "src": string;
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "condition"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "expression"?: undefined;
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "operator": string;
                                        "prefix": boolean;
                                        "src": string;
                                        "subExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "arguments": {
                                                    "argumentTypes": any;
                                                    "arguments": ({
                                                        "argumentTypes": any;
                                                        "arguments": {
                                                            "argumentTypes": any;
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "expression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "memberName": string;
                                                                "nodeType": string;
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": any;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        }[];
                                                        "expression": {
                                                            "argumentTypes": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            }[];
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "typeName": {
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": any;
                                                                    "typeString": any;
                                                                };
                                                            };
                                                            "expression"?: undefined;
                                                            "memberName"?: undefined;
                                                            "referencedDeclaration"?: undefined;
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "kind": string;
                                                        "lValueRequested": boolean;
                                                        "names": any[];
                                                        "nodeType": string;
                                                        "src": string;
                                                        "tryCall": boolean;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    } | {
                                                        "argumentTypes": any;
                                                        "arguments": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        }[];
                                                        "expression": {
                                                            "argumentTypes": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            }[];
                                                            "expression": {
                                                                "argumentTypes": any;
                                                                "id": number;
                                                                "name": string;
                                                                "nodeType": string;
                                                                "overloadedDeclarations": any[];
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "lValueRequested": boolean;
                                                            "memberName": string;
                                                            "nodeType": string;
                                                            "referencedDeclaration": any;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                            "typeName"?: undefined;
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "kind": string;
                                                        "lValueRequested": boolean;
                                                        "names": any[];
                                                        "nodeType": string;
                                                        "src": string;
                                                        "tryCall": boolean;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    })[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "tryCall": boolean;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                }[];
                                                "expression": {
                                                    "argumentTypes": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": any;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "kind": string;
                                                "lValueRequested": boolean;
                                                "names": any[];
                                                "nodeType": string;
                                                "src": string;
                                                "tryCall": boolean;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "tryCall": boolean;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "body"?: undefined;
                            "initializationExpression"?: undefined;
                            "loopExpression"?: undefined;
                        })[];
                    };
                    "documentation": string;
                    "functionSelector": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": {
                        "id": number;
                        "nodeType": string;
                        "overrides": any[];
                        "src": string;
                    };
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        } | {
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "src": string;
                    "virtual": boolean;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "functionSelector"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "typeName": {
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": any;
                                                    "typeString": any;
                                                };
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        })[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "functionSelector"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "hexValue"?: undefined;
                                "subdenomination"?: undefined;
                                "value"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "names"?: undefined;
                                "tryCall"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        })[];
                    };
                    "documentation": string;
                    "functionSelector": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": any;
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": any[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "functionSelector"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "typeName": {
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": any;
                                                    "typeString": any;
                                                };
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": {
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": any;
                                                "typeString": any;
                                            };
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "functionSelector"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": {
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": any;
                                                "typeString": any;
                                            };
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": any;
                                            "typeString": any;
                                        };
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "functionSelector"?: undefined;
                    "baseFunctions"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "arguments": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        }[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "typeName": {
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": any;
                                                    "typeString": any;
                                                };
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "tryCall": boolean;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": {
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": any;
                                                "typeString": any;
                                            };
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "tryCall": boolean;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": any;
                                            "typeString": any;
                                        };
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "tryCall": boolean;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": string;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "overrides": any;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overrides": any;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "virtual": boolean;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "functionSelector"?: undefined;
                    "baseFunctions"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "contractName": string;
        "compiler": {
            "version": string;
        };
        "networks": {};
    };
};
export { AssetOutcomeShortHand, getTestProvider, OutcomeShortHand, randomChannelId, randomExternalDestination, replaceAddressesAndBigNumberify, setupContracts, } from '../test/test-helpers';
export { DepositedEvent, AssetTransferredEvent, getAssetTransferredEvent, getDepositedEvent, convertBytes32ToAddress, convertAddressToBytes32, } from './contract/asset-holder';
export { getChallengeRegisteredEvent, getChallengeClearedEvent, ChallengeRegisteredEvent, } from './contract/challenge';
export { Channel, getChannelId } from './contract/channel';
export { validTransition, ForceMoveAppContractInterface, createValidTransitionTransaction, } from './contract/force-move-app';
export { encodeAllocation, encodeOutcome, decodeOutcome, Outcome, Allocation, AllocationItem, Guarantee, isAllocationOutcome, isGuaranteeOutcome, encodeGuarantee, AssetOutcome, GuaranteeAssetOutcome, AllocationAssetOutcome, hashOutcome, } from './contract/outcome';
export { channelDataToChannelStorageHash } from './contract/channel-storage';
export { State, VariablePart, getVariablePart, getFixedPart, hashAppPart, hashState, } from './contract/state';
export { createDepositTransaction as createERC20DepositTransaction } from './contract/transaction-creators/erc20-asset-holder';
export { createDepositTransaction as createETHDepositTransaction, createTransferAllTransaction, } from './contract/transaction-creators/eth-asset-holder';
export { signState, getStateSignerAddress, signChallengeMessage, signStates, SignedState, } from './signatures';
import * as Signatures from './signatures';
import * as Transactions from './transactions';
export { Signatures, Transactions };
export { Uint256, Bytes32 } from './contract/types';
//# sourceMappingURL=index.d.ts.map