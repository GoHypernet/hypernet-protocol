{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "Address": {
            "description": "Ethereum Address",
            "pattern": "^0x([a-fA-F0-9]{40})|0$",
            "type": "string"
        },
        "Allocation": {
            "additionalProperties": false,
            "description": "Array of destination-amount pairings for a given token",
            "properties": {
                "allocationItems": {
                    "description": "Array of destination-amount pairings",
                    "items": {
                        "$ref": "#/definitions/AllocationItem"
                    },
                    "type": "array"
                },
                "token": {
                    "$ref": "#/definitions/Address",
                    "description": "The token contract address"
                }
            },
            "required": [
                "token",
                "allocationItems"
            ],
            "type": "object"
        },
        "AllocationItem": {
            "additionalProperties": false,
            "description": "Assigns some amount of an unspecified asset to a destination",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/Uint256",
                    "description": "How much funds will be transferred to the destination address."
                },
                "destination": {
                    "$ref": "#/definitions/Address",
                    "description": "Address of EOA to receive channel proceeds."
                }
            },
            "required": [
                "destination",
                "amount"
            ],
            "type": "object"
        },
        "ApproveBudgetAndFundParams": {
            "additionalProperties": false,
            "properties": {
                "hub": {
                    "$ref": "#/definitions/Participant"
                },
                "playerParticipantId": {
                    "type": "string"
                },
                "requestedReceiveCapacity": {
                    "$ref": "#/definitions/Uint256"
                },
                "requestedSendCapacity": {
                    "$ref": "#/definitions/Uint256"
                },
                "token": {
                    "$ref": "#/definitions/Address"
                }
            },
            "required": [
                "hub",
                "playerParticipantId",
                "token",
                "requestedSendCapacity",
                "requestedReceiveCapacity"
            ],
            "type": "object"
        },
        "ApproveBudgetAndFundRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22ApproveBudgetAndFund%22%2CApproveBudgetAndFundParams%3E"
        },
        "ApproveBudgetAndFundResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3CDomainBudget%3E"
        },
        "BudgetUpdatedNotification": {
            "$ref": "#/definitions/JsonRpcNotification%3C%22BudgetUpdated%22%2CDomainBudget%3E"
        },
        "Bytes32": {
            "description": "Bytes32",
            "pattern": "^0x([a-fA-F0-9]{64})$",
            "type": "string"
        },
        "ChallengeChannelError": {
            "$ref": "#/definitions/JsonRpcError%3C1300%2C%22Could%20not%20find%20channel%22%3E"
        },
        "ChallengeChannelParams": {
            "additionalProperties": false,
            "properties": {
                "channelId": {
                    "$ref": "#/definitions/ChannelId"
                }
            },
            "required": [
                "channelId"
            ],
            "type": "object"
        },
        "ChallengeChannelRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22ChallengeChannel%22%2CChallengeChannelParams%3E"
        },
        "ChallengeChannelResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3CChannelResult%3E"
        },
        "ChannelBudget": {
            "additionalProperties": false,
            "properties": {
                "amount": {
                    "$ref": "#/definitions/Uint256"
                },
                "channelId": {
                    "$ref": "#/definitions/Bytes32"
                }
            },
            "required": [
                "channelId",
                "amount"
            ],
            "type": "object"
        },
        "ChannelClosed": {
            "$ref": "#/definitions/JsonRpcError%3C404%2C%22Channel%20closed%22%3E"
        },
        "ChannelClosingNotification": {
            "$ref": "#/definitions/JsonRpcNotification%3C%22ChannelClosed%22%2CChannelResult%3E"
        },
        "ChannelId": {
            "description": "Nitro ChannelId",
            "pattern": "^0x([a-fA-F0-9]{64})$",
            "type": "string"
        },
        "ChannelNotFound": {
            "$ref": "#/definitions/JsonRpcError%3C400%2C%22Channel%20not%20found%22%3E"
        },
        "ChannelProposedNotification": {
            "$ref": "#/definitions/JsonRpcNotification%3C%22ChannelProposed%22%2CChannelResult%3E"
        },
        "ChannelResult": {
            "additionalProperties": false,
            "properties": {
                "allocations": {
                    "items": {
                        "$ref": "#/definitions/Allocation"
                    },
                    "type": "array"
                },
                "appData": {
                    "type": "string"
                },
                "appDefinition": {
                    "$ref": "#/definitions/Address"
                },
                "challengeExpirationTime": {
                    "type": "number"
                },
                "channelId": {
                    "$ref": "#/definitions/ChannelId"
                },
                "participants": {
                    "items": {
                        "$ref": "#/definitions/Participant"
                    },
                    "type": "array"
                },
                "status": {
                    "$ref": "#/definitions/ChannelStatus"
                },
                "turnNum": {
                    "$ref": "#/definitions/Uint48"
                }
            },
            "required": [
                "participants",
                "allocations",
                "appData",
                "appDefinition",
                "channelId",
                "status",
                "turnNum"
            ],
            "type": "object"
        },
        "ChannelStatus": {
            "enum": [
                "proposed",
                "opening",
                "funding",
                "running",
                "challenging",
                "responding",
                "closing",
                "closed"
            ],
            "type": "string"
        },
        "ChannelUpdatedNotification": {
            "$ref": "#/definitions/JsonRpcNotification%3C%22ChannelUpdated%22%2CChannelResult%3E"
        },
        "CloseAndWithdrawError": {
            "$ref": "#/definitions/JsonRpcError%3C200%2C%22User%20declined%22%3E"
        },
        "CloseAndWithdrawParams": {
            "additionalProperties": false,
            "properties": {
                "hubParticipantId": {
                    "type": "string"
                }
            },
            "required": [
                "hubParticipantId"
            ],
            "type": "object"
        },
        "CloseAndWithdrawRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22CloseAndWithdraw%22%2CCloseAndWithdrawParams%3E"
        },
        "CloseAndWithdrawResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3Cstructure-736846332-356-374-736846332-339-375-736846332-300-376-736846332-0-498%3E"
        },
        "CloseChannelError": {
            "anyOf": [
                {
                    "$ref": "#/definitions/JsonRpcError%3C300%2C%22Not%20your%20turn%22%3E"
                },
                {
                    "$ref": "#/definitions/JsonRpcError%3C301%2C%22Channel%20not%20found%22%3E"
                }
            ]
        },
        "CloseChannelParams": {
            "additionalProperties": false,
            "properties": {
                "channelId": {
                    "$ref": "#/definitions/ChannelId"
                }
            },
            "required": [
                "channelId"
            ],
            "type": "object"
        },
        "CloseChannelRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22CloseChannel%22%2CCloseChannelParams%3E"
        },
        "CloseChannelResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3CChannelResult%3E"
        },
        "CreateChannelError": {
            "anyOf": [
                {
                    "$ref": "#/definitions/JsonRpcError%3C1000%2C%22Could%20not%20find%20signing%20address%22%3E"
                },
                {
                    "$ref": "#/definitions/JsonRpcError%3C1001%2C%22Invalid%20App%20Definition%22%3E"
                },
                {
                    "$ref": "#/definitions/JsonRpcError%3C1002%2C%22This%20token%20is%20not%20supported%22%3E"
                }
            ]
        },
        "CreateChannelParams": {
            "additionalProperties": false,
            "properties": {
                "allocations": {
                    "items": {
                        "$ref": "#/definitions/Allocation"
                    },
                    "type": "array"
                },
                "appData": {
                    "type": "string"
                },
                "appDefinition": {
                    "$ref": "#/definitions/Address"
                },
                "fundingStrategy": {
                    "$ref": "#/definitions/FundingStrategy"
                },
                "participants": {
                    "items": {
                        "$ref": "#/definitions/Participant"
                    },
                    "type": "array"
                }
            },
            "required": [
                "participants",
                "allocations",
                "appDefinition",
                "appData",
                "fundingStrategy"
            ],
            "type": "object"
        },
        "CreateChannelRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22CreateChannel%22%2CCreateChannelParams%3E"
        },
        "CreateChannelResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3CChannelResult%3E"
        },
        "DomainBudget": {
            "additionalProperties": false,
            "properties": {
                "budgets": {
                    "items": {
                        "$ref": "#/definitions/TokenBudget"
                    },
                    "type": "array"
                },
                "domain": {
                    "type": "string"
                },
                "hubAddress": {
                    "type": "string"
                }
            },
            "required": [
                "domain",
                "hubAddress",
                "budgets"
            ],
            "type": "object"
        },
        "EnableEthereumError": {
            "$ref": "#/definitions/JsonRpcError%3C100%2C%22Ethereum%20Not%20Enabled%22%3E"
        },
        "EnableEthereumRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22EnableEthereum%22%2Cstructure-721393493-238-241-721393493-205-242-721393493-168-243-721393493-0-517%3E"
        },
        "EnableEthereumResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3Cstructure-721393493-297-383-721393493-280-384-721393493-243-385-721393493-0-517%3E"
        },
        "FundingStrategy": {
            "enum": [
                "Direct",
                "Ledger",
                "Virtual"
            ],
            "type": "string"
        },
        "GetBudgetParams": {
            "additionalProperties": false,
            "properties": {
                "hubParticipantId": {
                    "type": "string"
                }
            },
            "required": [
                "hubParticipantId"
            ],
            "type": "object"
        },
        "GetBudgetRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22GetBudget%22%2CGetBudgetParams%3E"
        },
        "GetBudgetResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3C(DomainBudget%7Cstructure-45911622-322-325-45911622-308-325-45911622-291-326-45911622-259-327-45911622-0-328)%3E"
        },
        "GetChannelsRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22GetChannels%22%2Cstructure-946177841-247-273-946177841-217-274-946177841-184-275-946177841-0-344%3E"
        },
        "GetChannelsResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3Cdef-interface-src%2Fdata-types.ts-2747-3043-src%2Fdata-types.ts-0-3460%5B%5D%3E"
        },
        "GetStateError": {
            "$ref": "#/definitions/JsonRpcError%3C1200%2C%22Could%20not%20find%20channel%22%3E"
        },
        "GetStateParams": {
            "additionalProperties": false,
            "properties": {
                "channelId": {
                    "$ref": "#/definitions/ChannelId"
                }
            },
            "required": [
                "channelId"
            ],
            "type": "object"
        },
        "GetStateRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22GetState%22%2CGetStateParams%3E"
        },
        "GetStateResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3CChannelResult%3E"
        },
        "GetWalletInformationRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22GetWalletInformation%22%2Cstructure-825486248-193-196-825486248-154-197-825486248-111-198-825486248-0-359%3E"
        },
        "GetWalletInformationResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3Cstructure-825486248-258-356-825486248-241-357-825486248-198-358-825486248-0-359%3E"
        },
        "InvalidAppData": {
            "$ref": "#/definitions/JsonRpcError%3C402%2C%22Invalid%20app%20data%22%2Cstructure-1165839259-912-932-1165839259-844-934-1165839259-815-935-1165839259-0-1239%3E"
        },
        "InvalidTransition": {
            "$ref": "#/definitions/JsonRpcError%3C401%2C%22Invalid%20transition%22%2Cstructure-1165839259-742-812-1165839259-669-814-1165839259-637-815-1165839259-0-1239%3E"
        },
        "JoinChannelError": {
            "anyOf": [
                {
                    "$ref": "#/definitions/JsonRpcError%3C1100%2C%22Could%20not%20find%20channel%22%3E"
                },
                {
                    "$ref": "#/definitions/JsonRpcError%3C1101%2C%22Invalid%20Transition%22%3E"
                }
            ]
        },
        "JoinChannelParams": {
            "additionalProperties": false,
            "properties": {
                "channelId": {
                    "$ref": "#/definitions/ChannelId"
                }
            },
            "required": [
                "channelId"
            ],
            "type": "object"
        },
        "JoinChannelRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22JoinChannel%22%2CJoinChannelParams%3E"
        },
        "JoinChannelResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3CChannelResult%3E"
        },
        "JsonRpcError<100,\"Ethereum Not Enabled\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        100
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Ethereum Not Enabled"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<1000,\"Could not find signing address\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        1000
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Could not find signing address"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<1001,\"Invalid App Definition\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        1001
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Invalid App Definition"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<1002,\"This token is not supported\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        1002
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "This token is not supported"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<1100,\"Could not find channel\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        1100
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Could not find channel"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<1101,\"Invalid Transition\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        1101
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Invalid Transition"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<1200,\"Could not find channel\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        1200
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Could not find channel"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<1300,\"Could not find channel\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        1300
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Could not find channel"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<200,\"User declined\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        200
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "User declined"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<300,\"Not your turn\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        300
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Not your turn"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<301,\"Channel not found\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        301
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Channel not found"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<400,\"Channel not found\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        400
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Channel not found"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<401,\"Invalid transition\",structure-1165839259-742-812-1165839259-669-814-1165839259-637-815-1165839259-0-1239>": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        401
                    ],
                    "type": "number"
                },
                "data": {
                    "additionalProperties": false,
                    "description": "Error data",
                    "properties": {
                        "channelStatus": {
                            "$ref": "#/definitions/ChannelStatus"
                        },
                        "proposedUpdate": {
                            "$ref": "#/definitions/UpdateChannelParams"
                        }
                    },
                    "required": [
                        "channelStatus",
                        "proposedUpdate"
                    ],
                    "type": "object"
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Invalid transition"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<402,\"Invalid app data\",structure-1165839259-912-932-1165839259-844-934-1165839259-815-935-1165839259-0-1239>": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        402
                    ],
                    "type": "number"
                },
                "data": {
                    "additionalProperties": false,
                    "description": "Error data",
                    "properties": {
                        "appData": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "appData"
                    ],
                    "type": "object"
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Invalid app data"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<403,\"Not your turn\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        403
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Not your turn"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<404,\"Channel closed\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        404
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Channel closed"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<500,\"Wallet error\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        500
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Wallet error"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcError<900,\"Wrong participant\">": {
            "additionalProperties": false,
            "description": "Specifies error object as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "code": {
                    "description": "Error code",
                    "enum": [
                        900
                    ],
                    "type": "number"
                },
                "data": {
                    "description": "Error data",
                    "not": {}
                },
                "message": {
                    "description": "Error message",
                    "enum": [
                        "Wrong participant"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "JsonRpcErrorResponse<StateChannelsError>": {
            "additionalProperties": false,
            "description": "Specifies response headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "error": {
                    "$ref": "#/definitions/StateChannelsError",
                    "description": "The generic type of the response"
                },
                "id": {
                    "description": "Identifier for the response",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "error"
            ],
            "type": "object"
        },
        "JsonRpcNotification<\"BudgetUpdated\",DomainBudget>": {
            "additionalProperties": false,
            "description": "Specifies notification headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the Notification name",
                    "enum": [
                        "BudgetUpdated"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/DomainBudget",
                    "description": "Generic type of the Notification parameters"
                }
            },
            "required": [
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcNotification<\"ChannelClosed\",ChannelResult>": {
            "additionalProperties": false,
            "description": "Specifies notification headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the Notification name",
                    "enum": [
                        "ChannelClosed"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/ChannelResult",
                    "description": "Generic type of the Notification parameters"
                }
            },
            "required": [
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcNotification<\"ChannelProposed\",ChannelResult>": {
            "additionalProperties": false,
            "description": "Specifies notification headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the Notification name",
                    "enum": [
                        "ChannelProposed"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/ChannelResult",
                    "description": "Generic type of the Notification parameters"
                }
            },
            "required": [
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcNotification<\"ChannelUpdated\",ChannelResult>": {
            "additionalProperties": false,
            "description": "Specifies notification headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the Notification name",
                    "enum": [
                        "ChannelUpdated"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/ChannelResult",
                    "description": "Generic type of the Notification parameters"
                }
            },
            "required": [
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcNotification<\"MessageQueued\",Message>": {
            "additionalProperties": false,
            "description": "Specifies notification headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the Notification name",
                    "enum": [
                        "MessageQueued"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/Message",
                    "description": "Generic type of the Notification parameters"
                }
            },
            "required": [
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcNotification<\"UIUpdate\",structure-683137520-869-891-683137520-837-892-683137520-808-893-683137520-0-1427>": {
            "additionalProperties": false,
            "description": "Specifies notification headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the Notification name",
                    "enum": [
                        "UIUpdate"
                    ],
                    "type": "string"
                },
                "params": {
                    "additionalProperties": false,
                    "description": "Generic type of the Notification parameters",
                    "properties": {
                        "showWallet": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "showWallet"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcNotification<\"WalletReady\",structure-683137520-954-957-683137520-919-958-683137520-893-959-683137520-0-1427>": {
            "additionalProperties": false,
            "description": "Specifies notification headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the Notification name",
                    "enum": [
                        "WalletReady"
                    ],
                    "type": "string"
                },
                "params": {
                    "additionalProperties": false,
                    "description": "Generic type of the Notification parameters",
                    "type": "object"
                }
            },
            "required": [
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"ApproveBudgetAndFund\",ApproveBudgetAndFundParams>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "ApproveBudgetAndFund"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/ApproveBudgetAndFundParams",
                    "description": "Request parameters"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"ChallengeChannel\",ChallengeChannelParams>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "ChallengeChannel"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/ChallengeChannelParams",
                    "description": "Request parameters"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"CloseAndWithdraw\",CloseAndWithdrawParams>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "CloseAndWithdraw"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/CloseAndWithdrawParams",
                    "description": "Request parameters"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"CloseChannel\",CloseChannelParams>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "CloseChannel"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/CloseChannelParams",
                    "description": "Request parameters"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"CreateChannel\",CreateChannelParams>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "CreateChannel"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/CreateChannelParams",
                    "description": "Request parameters"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"EnableEthereum\",structure-721393493-238-241-721393493-205-242-721393493-168-243-721393493-0-517>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "EnableEthereum"
                    ],
                    "type": "string"
                },
                "params": {
                    "additionalProperties": false,
                    "description": "Request parameters",
                    "type": "object"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"GetBudget\",GetBudgetParams>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "GetBudget"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/GetBudgetParams",
                    "description": "Request parameters"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"GetChannels\",structure-946177841-247-273-946177841-217-274-946177841-184-275-946177841-0-344>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "GetChannels"
                    ],
                    "type": "string"
                },
                "params": {
                    "additionalProperties": false,
                    "description": "Request parameters",
                    "properties": {
                        "includeClosed": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"GetState\",GetStateParams>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "GetState"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/GetStateParams",
                    "description": "Request parameters"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"GetWalletInformation\",structure-825486248-193-196-825486248-154-197-825486248-111-198-825486248-0-359>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "GetWalletInformation"
                    ],
                    "type": "string"
                },
                "params": {
                    "additionalProperties": false,
                    "description": "Request parameters",
                    "type": "object"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"JoinChannel\",JoinChannelParams>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "JoinChannel"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/JoinChannelParams",
                    "description": "Request parameters"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"PushMessage\",Message>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "PushMessage"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/Message",
                    "description": "Request parameters"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcRequest<\"UpdateChannel\",UpdateChannelParams>": {
            "additionalProperties": false,
            "description": "Specifies request headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the resquest",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "method": {
                    "description": "Generic type of the request method",
                    "enum": [
                        "UpdateChannel"
                    ],
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/UpdateChannelParams",
                    "description": "Request parameters"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method",
                "params"
            ],
            "type": "object"
        },
        "JsonRpcResponse<(DomainBudget|structure-45911622-322-325-45911622-308-325-45911622-291-326-45911622-259-327-45911622-0-328)>": {
            "additionalProperties": false,
            "description": "Specifies response headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the response",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "result": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/DomainBudget"
                        },
                        {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    ],
                    "description": "The generic type of the response"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "result"
            ],
            "type": "object"
        },
        "JsonRpcResponse<ChannelResult>": {
            "additionalProperties": false,
            "description": "Specifies response headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the response",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/ChannelResult",
                    "description": "The generic type of the response"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "result"
            ],
            "type": "object"
        },
        "JsonRpcResponse<DomainBudget>": {
            "additionalProperties": false,
            "description": "Specifies response headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the response",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/DomainBudget",
                    "description": "The generic type of the response"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "result"
            ],
            "type": "object"
        },
        "JsonRpcResponse<PushMessageResult>": {
            "additionalProperties": false,
            "description": "Specifies response headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the response",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/PushMessageResult",
                    "description": "The generic type of the response"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "result"
            ],
            "type": "object"
        },
        "JsonRpcResponse<def-interface-src/data-types.ts-2747-3043-src/data-types.ts-0-3460[]>": {
            "additionalProperties": false,
            "description": "Specifies response headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the response",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "result": {
                    "description": "The generic type of the response",
                    "items": {
                        "$ref": "#/definitions/ChannelResult"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "result"
            ],
            "type": "object"
        },
        "JsonRpcResponse<structure-721393493-297-383-721393493-280-384-721393493-243-385-721393493-0-517>": {
            "additionalProperties": false,
            "description": "Specifies response headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the response",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "result": {
                    "additionalProperties": false,
                    "description": "The generic type of the response",
                    "properties": {
                        "destinationAddress": {
                            "$ref": "#/definitions/Address"
                        },
                        "signingAddress": {
                            "$ref": "#/definitions/Address"
                        },
                        "walletVersion": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "signingAddress",
                        "destinationAddress",
                        "walletVersion"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "result"
            ],
            "type": "object"
        },
        "JsonRpcResponse<structure-736846332-356-374-736846332-339-375-736846332-300-376-736846332-0-498>": {
            "additionalProperties": false,
            "description": "Specifies response headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the response",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "result": {
                    "additionalProperties": false,
                    "description": "The generic type of the response",
                    "properties": {
                        "success": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "success"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "result"
            ],
            "type": "object"
        },
        "JsonRpcResponse<structure-825486248-258-356-825486248-241-357-825486248-198-358-825486248-0-359>": {
            "additionalProperties": false,
            "description": "Specifies response headers as per {@link https://www.jsonrpc.org/specification | JSON-RPC 2.0 Specification }",
            "properties": {
                "id": {
                    "description": "Identifier for the response",
                    "type": "number"
                },
                "jsonrpc": {
                    "description": "Spec version",
                    "enum": [
                        "2.0"
                    ],
                    "type": "string"
                },
                "result": {
                    "additionalProperties": false,
                    "description": "The generic type of the response",
                    "properties": {
                        "destinationAddress": {
                            "$ref": "#/definitions/Address"
                        },
                        "signingAddress": {
                            "$ref": "#/definitions/Address"
                        },
                        "walletVersion": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "signingAddress",
                        "walletVersion"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "result"
            ],
            "type": "object"
        },
        "Message": {
            "additionalProperties": false,
            "description": "Format of message sent from the wallet to the app",
            "properties": {
                "data": {
                    "description": "Message payload. Format defined by wallet and opaque to app."
                },
                "recipient": {
                    "description": "Identifier of user that the message should be relayed to",
                    "type": "string"
                },
                "sender": {
                    "description": "Identifier of user that the message is from",
                    "type": "string"
                }
            },
            "required": [
                "recipient",
                "sender",
                "data"
            ],
            "type": "object"
        },
        "MessageQueuedNotification": {
            "$ref": "#/definitions/JsonRpcNotification%3C%22MessageQueued%22%2CMessage%3E"
        },
        "NotYourTurn": {
            "$ref": "#/definitions/JsonRpcError%3C403%2C%22Not%20your%20turn%22%3E"
        },
        "Participant": {
            "additionalProperties": false,
            "description": "Container for data specific to a single state channel participant",
            "properties": {
                "destination": {
                    "$ref": "#/definitions/Address",
                    "description": "Address of EOA to receive channel proceeds (the account that'll get the funds)."
                },
                "participantId": {
                    "description": "App allocated id, used for relaying messages to the participant",
                    "type": "string"
                },
                "signingAddress": {
                    "$ref": "#/definitions/Address",
                    "description": "Address used to sign channel updates"
                }
            },
            "required": [
                "participantId",
                "signingAddress",
                "destination"
            ],
            "type": "object"
        },
        "PushMessageError": {
            "$ref": "#/definitions/JsonRpcError%3C900%2C%22Wrong%20participant%22%3E"
        },
        "PushMessageRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22PushMessage%22%2CMessage%3E"
        },
        "PushMessageResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3CPushMessageResult%3E"
        },
        "PushMessageResult": {
            "additionalProperties": false,
            "properties": {
                "success": {
                    "type": "boolean"
                }
            },
            "required": [
                "success"
            ],
            "type": "object"
        },
        "StateChannelsError": {
            "anyOf": [
                {
                    "$ref": "#/definitions/EnableEthereumError"
                },
                {
                    "$ref": "#/definitions/CloseAndWithdrawError"
                },
                {
                    "$ref": "#/definitions/CloseChannelError"
                },
                {
                    "$ref": "#/definitions/UpdateChannelError"
                },
                {
                    "$ref": "#/definitions/PushMessageError"
                },
                {
                    "$ref": "#/definitions/JoinChannelError"
                },
                {
                    "$ref": "#/definitions/GetStateError"
                },
                {
                    "$ref": "#/definitions/CreateChannelError"
                },
                {
                    "$ref": "#/definitions/ChallengeChannelError"
                },
                {
                    "$ref": "#/definitions/JsonRpcError%3C500%2C%22Wallet%20error%22%3E"
                }
            ]
        },
        "StateChannelsErrorResponse": {
            "$ref": "#/definitions/JsonRpcErrorResponse%3CStateChannelsError%3E"
        },
        "StateChannelsJsonRpcMessage": {
            "anyOf": [
                {
                    "$ref": "#/definitions/StateChannelsRequest"
                },
                {
                    "$ref": "#/definitions/StateChannelsResponse"
                },
                {
                    "$ref": "#/definitions/StateChannelsNotification"
                },
                {
                    "$ref": "#/definitions/StateChannelsErrorResponse"
                }
            ]
        },
        "StateChannelsNotification": {
            "anyOf": [
                {
                    "$ref": "#/definitions/ChannelProposedNotification"
                },
                {
                    "$ref": "#/definitions/ChannelUpdatedNotification"
                },
                {
                    "$ref": "#/definitions/ChannelClosingNotification"
                },
                {
                    "$ref": "#/definitions/BudgetUpdatedNotification"
                },
                {
                    "$ref": "#/definitions/MessageQueuedNotification"
                },
                {
                    "$ref": "#/definitions/UiNotification"
                },
                {
                    "$ref": "#/definitions/WalletReady"
                }
            ]
        },
        "StateChannelsRequest": {
            "anyOf": [
                {
                    "$ref": "#/definitions/CreateChannelRequest"
                },
                {
                    "$ref": "#/definitions/JoinChannelRequest"
                },
                {
                    "$ref": "#/definitions/UpdateChannelRequest"
                },
                {
                    "$ref": "#/definitions/GetWalletInformationRequest"
                },
                {
                    "$ref": "#/definitions/EnableEthereumRequest"
                },
                {
                    "$ref": "#/definitions/GetStateRequest"
                },
                {
                    "$ref": "#/definitions/PushMessageRequest"
                },
                {
                    "$ref": "#/definitions/ChallengeChannelRequest"
                },
                {
                    "$ref": "#/definitions/GetBudgetRequest"
                },
                {
                    "$ref": "#/definitions/ApproveBudgetAndFundRequest"
                },
                {
                    "$ref": "#/definitions/CloseChannelRequest"
                },
                {
                    "$ref": "#/definitions/CloseAndWithdrawRequest"
                },
                {
                    "$ref": "#/definitions/GetChannelsRequest"
                }
            ]
        },
        "StateChannelsResponse": {
            "anyOf": [
                {
                    "$ref": "#/definitions/CreateChannelResponse"
                },
                {
                    "$ref": "#/definitions/JoinChannelResponse"
                },
                {
                    "$ref": "#/definitions/UpdateChannelResponse"
                },
                {
                    "$ref": "#/definitions/GetWalletInformationResponse"
                },
                {
                    "$ref": "#/definitions/EnableEthereumResponse"
                },
                {
                    "$ref": "#/definitions/GetStateResponse"
                },
                {
                    "$ref": "#/definitions/PushMessageResponse"
                },
                {
                    "$ref": "#/definitions/ChallengeChannelResponse"
                },
                {
                    "$ref": "#/definitions/GetBudgetResponse"
                },
                {
                    "$ref": "#/definitions/CloseChannelResponse"
                },
                {
                    "$ref": "#/definitions/ApproveBudgetAndFundResponse"
                },
                {
                    "$ref": "#/definitions/CloseAndWithdrawResponse"
                },
                {
                    "$ref": "#/definitions/GetChannelsResponse"
                }
            ]
        },
        "TokenBudget": {
            "additionalProperties": false,
            "properties": {
                "availableReceiveCapacity": {
                    "$ref": "#/definitions/Uint256"
                },
                "availableSendCapacity": {
                    "$ref": "#/definitions/Uint256"
                },
                "channels": {
                    "items": {
                        "$ref": "#/definitions/ChannelBudget"
                    },
                    "type": "array"
                },
                "token": {
                    "$ref": "#/definitions/Address"
                }
            },
            "required": [
                "token",
                "availableReceiveCapacity",
                "availableSendCapacity",
                "channels"
            ],
            "type": "object"
        },
        "UiNotification": {
            "$ref": "#/definitions/JsonRpcNotification%3C%22UIUpdate%22%2Cstructure-683137520-869-891-683137520-837-892-683137520-808-893-683137520-0-1427%3E"
        },
        "Uint256": {
            "description": "Uint256",
            "pattern": "^0x([a-fA-F0-9]{64})$",
            "type": "string"
        },
        "Uint48": {
            "type": "number"
        },
        "UpdateChannelError": {
            "anyOf": [
                {
                    "$ref": "#/definitions/ChannelNotFound"
                },
                {
                    "$ref": "#/definitions/InvalidTransition"
                },
                {
                    "$ref": "#/definitions/InvalidAppData"
                },
                {
                    "$ref": "#/definitions/NotYourTurn"
                },
                {
                    "$ref": "#/definitions/ChannelClosed"
                }
            ]
        },
        "UpdateChannelParams": {
            "additionalProperties": false,
            "properties": {
                "allocations": {
                    "items": {
                        "$ref": "#/definitions/Allocation"
                    },
                    "type": "array"
                },
                "appData": {
                    "type": "string"
                },
                "channelId": {
                    "$ref": "#/definitions/ChannelId"
                }
            },
            "required": [
                "channelId",
                "allocations",
                "appData"
            ],
            "type": "object"
        },
        "UpdateChannelRequest": {
            "$ref": "#/definitions/JsonRpcRequest%3C%22UpdateChannel%22%2CUpdateChannelParams%3E"
        },
        "UpdateChannelResponse": {
            "$ref": "#/definitions/JsonRpcResponse%3CChannelResult%3E"
        },
        "WalletReady": {
            "$ref": "#/definitions/JsonRpcNotification%3C%22WalletReady%22%2Cstructure-683137520-954-957-683137520-919-958-683137520-893-959-683137520-0-1427%3E"
        }
    }
}
