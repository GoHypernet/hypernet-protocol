(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{201:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return s}));var r=t(2),a=t(6),o=(t(0),t(420)),c={id:"client-api-schema.errorcodes",title:"ErrorCodes type",hide_title:!0},i={unversionedId:"typescript-api/client-api-schema.errorcodes",id:"typescript-api/client-api-schema.errorcodes",isDocsHomePage:!1,title:"ErrorCodes type",description:"@statechannels/client-api-schema &gt; ErrorCodes",source:"@site/docs/typescript-api/client-api-schema.errorcodes.md",permalink:"/typescript-api/client-api-schema.errorcodes"},l=[{value:"ErrorCodes type",id:"errorcodes-type",children:[]},{value:"Remarks",id:"remarks",children:[]}],p={rightToc:l};function s(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/typescript-api/client-api-schema"}),"@statechannels/client-api-schema")," ",">"," ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/typescript-api/client-api-schema.errorcodes"}),"ErrorCodes")),Object(o.b)("h2",{id:"errorcodes-type"},"ErrorCodes type"),Object(o.b)("p",null,"Error codes that might be returned by the wallet"),Object(o.b)("b",null,"Signature:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"export declare type ErrorCodes = {\n    EnableEthereum: {\n        EthereumNotEnabled: 100;\n    };\n    CloseAndWithdraw: {\n        UserDeclined: 200;\n    };\n    CloseChannel: {\n        NotYourTurn: 300;\n        ChannelNotFound: 301;\n    };\n    UpdateChannel: {\n        ChannelNotFound: 400;\n        InvalidTransition: 401;\n        InvalidAppData: 402;\n        NotYourTurn: 403;\n        ChannelClosed: 404;\n    };\n    PushMessage: {\n        WrongParticipant: 900;\n    };\n    CreateChannel: {\n        SigningAddressNotFound: 1000;\n        InvalidAppDefinition: 1001;\n        UnsupportedToken: 1002;\n    };\n    JoinChannel: {\n        ChannelNotFound: 1100;\n        InvalidTransition: 1101;\n    };\n    GetState: {\n        ChannelNotFound: 1200;\n    };\n    ChallengeChannel: {\n        ChannelNotFound: 1300;\n    };\n};\n")),Object(o.b)("h2",{id:"remarks"},"Remarks"),Object(o.b)("p",null,"Errors conform to the ","[","JSON-RPC 2.0 error spec","]","(",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.jsonrpc.org/specification%5C#error%5C_object"}),"https://www.jsonrpc.org/specification\\#error\\_object"),"). Beyond the standard errors from that spec, the following domain-specific errors are possible: ",Object(o.b)("ul",null," ",Object(o.b)("li",null," 100: The wallet approval was rejected by the Web3 provider.")," ",Object(o.b)("li",null," 200: The user declines")," ",Object(o.b)("li",null," 300: You cannot close the channel when it is not your turn")," ",Object(o.b)("li",null," 400: Channel not found")," ",Object(o.b)("li",null," 900: The message is not addressed to this wallet.")," ",Object(o.b)("li",null," 1000: The wallet can't find the signing key corresponding to the first signing address in the participants array.")," ",Object(o.b)("li",null," 1001: There isn't a contract deployed at the app definition address. ")," ",Object(o.b)("li",null," 1002: The wallet doesn't support one or more of the tokens appearing in the allocation.")," ",Object(o.b)("li",null," 1100: The wallet can't find the channel corresponding to the channelId")," ",Object(o.b)("li",null," 1101: The wallet contains invalid state data")," ",Object(o.b)("li",null," 1200: The wallet can't find the channel corresponding to the channelId")," ",Object(o.b)("li",null," 1300: The wallet can't find the channel corresponding to the channelId")," ")))}s.isMDXComponent=!0},420:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return h}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),s=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),b=r,h=d["".concat(c,".").concat(b)]||d[b]||u[b]||o;return t?a.a.createElement(h,i(i({ref:n},p),{},{components:t})):a.a.createElement(h,i({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,c=new Array(o);c[0]=b;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var p=2;p<o;p++)c[p]=t[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);