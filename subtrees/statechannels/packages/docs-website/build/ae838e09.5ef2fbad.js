(window.webpackJsonp=window.webpackJsonp||[]).push([[253],{304:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return o})),t.d(n,"default",(function(){return s}));var a=t(2),r=t(6),c=(t(0),t(420)),l={id:"channel-client.channelclient.closechannel",title:"ChannelClient.closeChannel() method",hide_title:!0},i={unversionedId:"typescript-api/channel-client.channelclient.closechannel",id:"typescript-api/channel-client.channelclient.closechannel",isDocsHomePage:!1,title:"ChannelClient.closeChannel() method",description:"@statechannels/channel-client &gt; ChannelClient &gt; closeChannel",source:"@site/docs/typescript-api/channel-client.channelclient.closechannel.md",permalink:"/typescript-api/channel-client.channelclient.closechannel"},o=[{value:"ChannelClient.closeChannel() method",id:"channelclientclosechannel-method",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Remarks",id:"remarks",children:[]}],p={rightToc:o};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/typescript-api/channel-client"}),"@statechannels/channel-client")," ",">"," ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/typescript-api/channel-client.channelclient"}),"ChannelClient")," ",">"," ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/typescript-api/channel-client.channelclient.closechannel"}),"closeChannel")),Object(c.b)("h2",{id:"channelclientclosechannel-method"},"ChannelClient.closeChannel() method"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),Object(c.b)("p",null,"Requests a close for a channel"),Object(c.b)("b",null,"Signature:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"closeChannel(channelId: string): Promise<ChannelResult>;\n")),Object(c.b)("h2",{id:"parameters"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"channelId"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"id for the state channel")))),Object(c.b)("b",null,"Returns:"),Object(c.b)("p",null,"Promise","<",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/typescript-api/client-api-schema.channelresult"}),"ChannelResult"),">"),Object(c.b)("p",null,"A promise that resolves to a ChannelResult."),Object(c.b)("h2",{id:"remarks"},"Remarks"),Object(c.b)("p",null,"The wallet will respond to this request with an error if it is not your turn. If it is your turn, the wallet will respond as soon as it has signed an ",Object(c.b)("inlineCode",{parentName:"p"},"isFinal")," state, and the channel is updated to ",Object(c.b)("inlineCode",{parentName:"p"},"closing")," status. The channel may later update to ",Object(c.b)("inlineCode",{parentName:"p"},"closed")," status only when other channel participants have responded in kind: this can be detected by listening to ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/typescript-api/channel-client.channelclient.onchannelupdated"}),"Channel Updated")," events and filtering on the channel status."))}s.isMDXComponent=!0},420:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return d}));var a=t(0),r=t.n(a);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=r.a.createContext({}),s=function(e){var n=r.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},b=function(e){var n=s(e.components);return r.a.createElement(p.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=s(t),u=a,d=b["".concat(l,".").concat(u)]||b[u]||h[u]||c;return t?r.a.createElement(d,i(i({ref:n},p),{},{components:t})):r.a.createElement(d,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,l=new Array(c);l[0]=u;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<c;p++)l[p]=t[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);