(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{238:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return b}));var a=n(2),r=n(6),c=(n(0),n(420)),i={id:"SingleAssetPayments",title:"SingleAssetPayments.sol"},l={unversionedId:"contract-api/natspec/SingleAssetPayments",id:"contract-api/natspec/SingleAssetPayments",isDocsHomePage:!1,title:"SingleAssetPayments.sol",description:"View Source: contracts/examples/SingleAssetPayments.sol",source:"@site/docs/contract-api/natspec/SingleAssetPayments.md",permalink:"/contract-api/natspec/SingleAssetPayments",sidebar:"Contract API",previous:{title:"CountingApp.sol",permalink:"/contract-api/natspec/CountingApp"},next:{title:"TrivialApp.sol",permalink:"/contract-api/natspec/TrivialApp"}},o=[{value:"Functions",id:"functions",children:[{value:"validTransition",id:"validtransition",children:[]}]}],p={rightToc:o};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"View Source: ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/statechannels/monorepo/tree/master/packages/nitro-protocol/contracts/examples/SingleAssetPayments.sol"}),"contracts/examples/SingleAssetPayments.sol")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"\u2197 Extends: ",Object(c.b)("a",Object(a.a)({parentName:"strong"},{href:"/contract-api/natspec/ForceMoveApp"}),"ForceMoveApp"))),Object(c.b)("p",null,"The SingleAssetPayments contract complies with the ForceMoveApp interface and implements a simple payment channel with a single asset type only."),Object(c.b)("hr",null),Object(c.b)("h2",{id:"functions"},"Functions"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"#validtransition"}),"validTransition"))),Object(c.b)("hr",null),Object(c.b)("h3",{id:"validtransition"},"validTransition"),Object(c.b)("p",null,"Encodes the payment channel update rules."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-solidity"}),"function validTransition(struct ForceMoveApp.VariablePart a, struct ForceMoveApp.VariablePart b, uint48 turnNumB, uint256 nParticipants) public pure\nreturns(bool)\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")),Object(c.b)("p",null,"true if the transition conforms to the rules, false otherwise."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"a"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"struct ForceMoveApp.VariablePart"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"State being transitioned from.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"b"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"struct ForceMoveApp.VariablePart"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"State being transitioned to.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"turnNumB"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"uint48"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Turn number being transitioned to.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"nParticipants"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"uint256"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Number of participants in this state channel.")))))}b.isMDXComponent=!0},420:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),b=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=b(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=b(n),m=a,O=s["".concat(i,".").concat(m)]||s[m]||u[m]||c;return n?r.a.createElement(O,l(l({ref:t},p),{},{components:n})):r.a.createElement(O,l({ref:t},p))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,i=new Array(c);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<c;p++)i[p]=n[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);