(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{231:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return i}));var a=n(2),r=n(6),c=(n(0),n(420)),b={id:"ERC20AssetHolder",title:"ERC20AssetHolder.sol"},l={unversionedId:"contract-api/natspec/ERC20AssetHolder",id:"contract-api/natspec/ERC20AssetHolder",isDocsHomePage:!1,title:"ERC20AssetHolder.sol",description:"View Source: contracts/ERC20AssetHolder.sol",source:"@site/docs/contract-api/natspec/ERC20AssetHolder.md",permalink:"/contract-api/natspec/ERC20AssetHolder",sidebar:"Contract API",previous:{title:"NitroAdjudicator.sol",permalink:"/contract-api/natspec/NitroAdjudicator"},next:{title:"ETHAssetHolder.sol",permalink:"/contract-api/natspec/ETHAssetHolder"}},o=[{value:"Contract Members",id:"contract-members",children:[]},{value:"Functions",id:"functions",children:[{value:"constructor",id:"constructor",children:[]},{value:"deposit",id:"deposit",children:[]},{value:"_transferAsset",id:"_transferasset",children:[]}]}],s={rightToc:o};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"View Source: ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/statechannels/monorepo/tree/master/packages/nitro-protocol/contracts/ERC20AssetHolder.sol"}),"contracts/ERC20AssetHolder.sol")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"\u2197 Extends: ",Object(c.b)("a",Object(a.a)({parentName:"strong"},{href:"/contract-api/natspec/AssetHolder"}),"AssetHolder")),"\n",Object(c.b)("strong",{parentName:"p"},"\u2198 Derived Contracts: ",Object(c.b)("a",Object(a.a)({parentName:"strong"},{href:"/contract-api/natspec/TestErc20AssetHolder"}),"TestErc20AssetHolder"))),Object(c.b)("p",null,"Ther ERC20AssetHolder contract extends the AssetHolder contract, and adds the following functionality: it allows ERC20 tokens to be escrowed against a state channelId and to be transferred to external destinations."),Object(c.b)("hr",null),Object(c.b)("h2",{id:"contract-members"},"Contract Members"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Constants & Variables")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-solidity"}),"contract IERC20 public Token;\n\n")),Object(c.b)("h2",{id:"functions"},"Functions"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"#constructor"}),"constructor")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"#deposit"}),"deposit")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"#_transferasset"}),"_transferAsset"))),Object(c.b)("hr",null),Object(c.b)("h3",{id:"constructor"},"constructor"),Object(c.b)("p",null,"Constructor function storing the AdjudicatorAddress and instantiating an interface to an ERC20 Token contract."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-solidity"}),"constructor(address _AdjudicatorAddress, address _TokenAddress) public nonpayable\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"_AdjudicatorAddress"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"address"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Address of an Adjudicator  contract, supplied at deploy-time.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"_TokenAddress"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"address"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Address of an ERC20 Token  contract, supplied at deploy-time.")))),Object(c.b)("h3",{id:"deposit"},"deposit"),Object(c.b)("p",null,"Deposit ERC20 tokens against a given destination."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-solidity"}),"function deposit(bytes32 destination, uint256 expectedHeld, uint256 amount) public nonpayable\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"destination"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"bytes32"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ChannelId to be credited.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"expectedHeld"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"uint256"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The amount of tokens that the depositor believes are ",Object(c.b)("em",{parentName:"td"},"already")," escrowed against the channelId.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"amount"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"uint256"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The intended number of tokens to be deposited.")))),Object(c.b)("h3",{id:"_transferasset"},"_transferAsset"),Object(c.b)("p",null,"Transfers the given amount of ERC20 tokens to a supplied ethereum address."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-solidity"}),"function _transferAsset(address payable destination, uint256 amount) internal nonpayable\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"destination"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"address payable"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Ethereum address to be credited.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"amount"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"uint256"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Quantity of tokens to be transferred.")))))}i.isMDXComponent=!0},420:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),i=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=i(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,b=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=i(n),u=a,O=p["".concat(b,".").concat(u)]||p[u]||d[u]||c;return n?r.a.createElement(O,l(l({ref:t},s),{},{components:n})):r.a.createElement(O,l({ref:t},s))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,b=new Array(c);b[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,b[1]=l;for(var s=2;s<c;s++)b[s]=n[s];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);