(window.webpackJsonp=window.webpackJsonp||[]).push([[343],{394:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(2),o=n(6),r=(n(0),n(420)),i={id:"finalize-a-channel-sad",title:"Finalize a channel (sad)"},c={unversionedId:"protocol-tutorial/finalize-a-channel-sad",id:"protocol-tutorial/finalize-a-channel-sad",isDocsHomePage:!1,title:"Finalize a channel (sad)",description:"When cooperation breaks down, it is possible to finalize a state channel without requiring on-demand cooperation of all participants. This is the so-called 'sad' path to finalizing a channel, and it requires a supported (but isFinal = false) state(s) being submitted to the chain.",source:"@site/docs/protocol-tutorial/finalize-a-channel-sad.md",permalink:"/protocol-tutorial/finalize-a-channel-sad",lastUpdatedBy:"Caleb Ditchfield",lastUpdatedAt:1600126133,sidebar:"docs",previous:{title:"Finalize a channel (happy)",permalink:"/protocol-tutorial/finalize-a-channel-happy"},next:{title:"Understand channel storage",permalink:"/protocol-tutorial/understand-channel-storage"}},l=[{value:"Call <code>forceMove</code>",id:"call-forcemove",children:[]}],s={rightToc:l};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"When cooperation breaks down, it is possible to finalize a state channel without requiring on-demand cooperation of all participants. This is the so-called 'sad' path to finalizing a channel, and it requires a supported (but ",Object(r.b)("inlineCode",{parentName:"p"},"isFinal = false"),") state(s) being submitted to the chain."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"forceMove")," function allows anyone holding the appropriate off-chain state to register a challenge on chain. It is designed to ensure that a state channel can progress or be finalized in the event of inactivity on behalf of a participant (e.g. the current mover)."),Object(r.b)("p",null,"States and signatures that imply a support proof are submitted (in an optimized format), and once relevant checks have passed, an ",Object(r.b)("inlineCode",{parentName:"p"},"outcome")," is registered against the ",Object(r.b)("inlineCode",{parentName:"p"},"channelId"),", with a finalization time set at some delay after the transaction is processed. This delay allows the challenge to be cleared by a timely and well-formed ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/protocol-tutorial/clear-a-challenge#call-respond"}),"respond")," or ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/protocol-tutorial/clear-a-challenge#call-checkpoint"}),"checkpoint")," transaction. We'll get to those shortly. If no such transaction is forthcoming, the challenge will time out, allowing the ",Object(r.b)("inlineCode",{parentName:"p"},"outcome")," registered to be finalized. A finalized outcome can then be used to extract funds from the channel (more on that below, too)."),Object(r.b)("h2",{id:"call-forcemove"},"Call ",Object(r.b)("inlineCode",{parentName:"h2"},"forceMove")),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"The challenger needs to sign this data:"),Object(r.b)("pre",{parentName:"div"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"keccak256(abi.encode(challengeStateHash, 'forceMove'))\n")),Object(r.b)("p",{parentName:"div"},"in order to form ",Object(r.b)("inlineCode",{parentName:"p"},"challengerSig"),". This signals their intent to forceMove this channel with this particular state. This mechanism allows the forceMove to be authorized only by a channel participant."))),Object(r.b)("p",null,"We provide a handy utility function ",Object(r.b)("inlineCode",{parentName:"p"},"signChallengeMessage")," to form this signature."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"// In lesson7.test.ts\n\nimport {signChallengeMessage} from '@statechannels/nitro-protocol';\n\nconst participants = [];\nconst wallets: ethers.Wallet[] = [];\nfor (let i = 0; i < 3; i++) {\n  wallets[i] = ethers.Wallet.createRandom();\n  participants[i] = wallets[i].address;\n}\nconst chainId = '0x1234';\nconst channelNonce = 0;\nconst channel: Channel = {chainId, channelNonce, participants};\n\n/* Choose a challenger */\nconst challenger = wallets[0];\n\n/* Construct a progression of states */\nconst largestTurnNum = 8;\nconst isFinalCount = 0;\nconst appDatas = [0, 1, 2];\nconst states: State[] = appDatas.map((data, idx) => ({\n  turnNum: largestTurnNum - appDatas.length + 1 + idx,\n  isFinal: idx > appDatas.length - isFinalCount,\n  channel,\n  challengeDuration: 1,\n  outcome: [],\n  appDefinition: process.env.TRIVIAL_APP_ADDRESS,\n  appData: HashZero\n}));\n\n/* Construct a support proof */\nconst whoSignedWhat = [0, 1, 2];\nconst signatures = await signStates(states, wallets, whoSignedWhat);\n\n/* Form the challengeSignature */\nconst challengeSignedState: SignedState = signState(\n  states[states.length - 1],\n  challenger.privateKey\n);\nconst challengeSignature = signChallengeMessage([challengeSignedState], challenger.privateKey);\n\n/* Submit the forceMove transaction */\nconst variableParts = states.map(state => getVariablePart(state));\nconst fixedPart = getFixedPart(states[0]);\n\nconst tx = NitroAdjudicator.forceMove(\n  fixedPart,\n  largestTurnNum,\n  variableParts,\n  isFinalCount,\n  signatures,\n  whoSignedWhat,\n  challengeSignature\n);\n")))}p.isMDXComponent=!0},420:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,b=d["".concat(i,".").concat(u)]||d[u]||h[u]||r;return n?o.a.createElement(b,c(c({ref:t},s),{},{components:n})):o.a.createElement(b,c({ref:t},s))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<r;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);