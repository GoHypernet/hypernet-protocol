(window.webpackJsonp=window.webpackJsonp||[]).push([[350],{401:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return p})),n.d(e,"metadata",(function(){return i})),n.d(e,"rightToc",(function(){return b})),n.d(e,"default",(function(){return l}));var a=n(2),r=n(6),c=(n(0),n(420)),p={id:"CountingApp",title:"CountingApp.sol"},i={unversionedId:"contract-api/natspec/CountingApp",id:"contract-api/natspec/CountingApp",isDocsHomePage:!1,title:"CountingApp.sol",description:"View Source: contracts/CountingApp.sol",source:"@site/docs/contract-api/natspec/CountingApp.md",permalink:"/contract-api/natspec/CountingApp",sidebar:"Contract API",previous:{title:"ETHAssetHolder.sol",permalink:"/contract-api/natspec/ETHAssetHolder"},next:{title:"SingleAssetPayments.sol",permalink:"/contract-api/natspec/SingleAssetPayments"}},b=[{value:"Structs",id:"structs",children:[{value:"CountingAppData",id:"countingappdata",children:[]}]},{value:"Functions",id:"functions",children:[{value:"appData",id:"appdata",children:[]},{value:"validTransition",id:"validtransition",children:[]}]}],o={rightToc:b};function l(t){var e=t.components,n=Object(r.a)(t,["components"]);return Object(c.b)("wrapper",Object(a.a)({},o,n,{components:e,mdxType:"MDXLayout"}),Object(c.b)("p",null,"View Source: ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/statechannels/monorepo/tree/master/packages/nitro-protocol/contracts/CountingApp.sol"}),"contracts/CountingApp.sol")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"\u2197 Extends: ",Object(c.b)("a",Object(a.a)({parentName:"strong"},{href:"/contract-api/natspec/ForceMoveApp"}),"ForceMoveApp"))),Object(c.b)("p",null,"The CountingApp contracts complies with the ForceMoveApp interface and allows only for a simple counter to be incremented. Used for testing purposes."),Object(c.b)("hr",null),Object(c.b)("h2",{id:"structs"},"Structs"),Object(c.b)("h3",{id:"countingappdata"},"CountingAppData"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-solidity"}),"struct CountingAppData {\n uint256 counter\n}\n")),Object(c.b)("h2",{id:"functions"},"Functions"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"#appdata"}),"appData")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"#validtransition"}),"validTransition"))),Object(c.b)("hr",null),Object(c.b)("h3",{id:"appdata"},"appData"),Object(c.b)("p",null,"Decodes the appData."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-solidity"}),"function appData(bytes appDataBytes) internal pure\nreturns(struct CountingApp.CountingAppData)\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")),Object(c.b)("p",null,"A CountingAppDatat struct containing the application-specific data."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"appDataBytes"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"bytes"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The abi.encode of a CountingAppData struct describing the application-specific data.")))),Object(c.b)("h3",{id:"validtransition"},"validTransition"),Object(c.b)("p",null,"Encodes the CountingApp rules."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-solidity"}),"function validTransition(struct ForceMoveApp.VariablePart a, struct ForceMoveApp.VariablePart b, uint48 , uint256 ) public pure\nreturns(bool)\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")),Object(c.b)("p",null,"true if the transition conforms to the rules, false otherwise."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"a"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"struct ForceMoveApp.VariablePart"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"State being transitioned from.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"b"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"struct ForceMoveApp.VariablePart"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"State being transitioned to.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"uint48"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"a State being transitioned from.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"uint256"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"a State being transitioned from.")))))}l.isMDXComponent=!0},420:function(t,e,n){"use strict";n.d(e,"a",(function(){return u})),n.d(e,"b",(function(){return j}));var a=n(0),r=n.n(a);function c(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function p(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?p(Object(n),!0).forEach((function(e){c(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function b(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},c=Object.keys(t);for(a=0;a<c.length;a++)n=c[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(a=0;a<c.length;a++)n=c[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=r.a.createContext({}),l=function(t){var e=r.a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=l(t.components);return r.a.createElement(o.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.a.createElement(r.a.Fragment,{},e)}},O=r.a.forwardRef((function(t,e){var n=t.components,a=t.mdxType,c=t.originalType,p=t.parentName,o=b(t,["components","mdxType","originalType","parentName"]),u=l(n),O=a,j=u["".concat(p,".").concat(O)]||u[O]||s[O]||c;return n?r.a.createElement(j,i(i({ref:e},o),{},{components:n})):r.a.createElement(j,i({ref:e},o))}));function j(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var c=n.length,p=new Array(c);p[0]=O;var i={};for(var b in e)hasOwnProperty.call(e,b)&&(i[b]=e[b]);i.originalType=t,i.mdxType="string"==typeof t?t:a,p[1]=i;for(var o=2;o<c;o++)p[o]=n[o];return r.a.createElement.apply(null,p)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"}}]);