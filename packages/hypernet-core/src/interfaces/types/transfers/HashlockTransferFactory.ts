/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { HashlockTransfer } from "./HashlockTransfer";

export class HashlockTransferFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<HashlockTransfer> {
    return super.deploy(overrides || {}) as Promise<HashlockTransfer>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HashlockTransfer {
    return super.attach(address) as HashlockTransfer;
  }
  connect(signer: Signer): HashlockTransferFactory {
    return super.connect(signer) as HashlockTransferFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): HashlockTransfer {
    return new Contract(address, _abi, signerOrProvider) as HashlockTransfer;
  }
}

const _abi = [
  {
    inputs: [],
    name: "Name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ResolverEncoding",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "StateEncoding",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedBalance",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "encodedState",
        type: "bytes",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegistryInformation",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "definition",
            type: "address",
          },
          {
            internalType: "string",
            name: "stateEncoding",
            type: "string",
          },
          {
            internalType: "string",
            name: "resolverEncoding",
            type: "string",
          },
        ],
        internalType: "struct RegisteredTransfer",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedBalance",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "encodedState",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "encodedResolver",
        type: "bytes",
      },
    ],
    name: "resolve",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "amount",
            type: "uint256[2]",
          },
          {
            internalType: "address payable[2]",
            name: "to",
            type: "address[2]",
          },
        ],
        internalType: "struct Balance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c03806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063206162be146100675780633722aff9146100855780638052474d1461009a5780638de8b77e146100a25780638ef98a7e146100aa57806394184ba9146100ca575b600080fd5b61006f6100ea565b60405161007c9190610adc565b60405180910390f35b61008d61027c565b60405161007c9190610912565b61008d6102b5565b61008d6102e1565b6100bd6100b836600461065f565b6102fd565b60405161007c9190610a72565b6100dd6100d83660046105f6565b61044d565b60405161007c91906108fe565b6100f26104fa565b6040518060800160405280306001600160a01b0316638052474d6040518163ffffffff1660e01b815260040160006040518083038186803b15801561013657600080fd5b505afa15801561014a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261017291908101906106f5565b8152602001306001600160a01b03168152602001306001600160a01b0316638de8b77e6040518163ffffffff1660e01b815260040160006040518083038186803b1580156101bf57600080fd5b505afa1580156101d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101fb91908101906106f5565b8152602001306001600160a01b0316633722aff96040518163ffffffff1660e01b815260040160006040518083038186803b15801561023957600080fd5b505afa15801561024d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261027591908101906106f5565b9052905090565b6040518060400160405280601781526020017f7475706c65286279746573333220707265496d6167652900000000000000000081525081565b6040518060400160405280601081526020016f2430b9b43637b1b5aa3930b739b332b960811b81525081565b604051806060016040528060278152602001610ba76027913981565b61030561052b565b61030d610550565b61031985870187610883565b9050610323610567565b61032f8486018661085e565b905061033961052b565b610345898b018b610781565b8251909150158015906103675750602083015115806103675750438360200151115b15610421576000600283600001516040516020016103859190610909565b60408051601f198184030181529082905261039f916108e2565b602060405180830381855afa1580156103bc573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103df91906105de565b8451909150811461040b5760405162461bcd60e51b8152600401610402906109b9565b60405180910390fd5b5080518051602090910152805160009052610440565b8151156104405760405162461bcd60e51b815260040161040290610977565b9998505050505050505050565b6000610457610550565b61046383850185610883565b905061046d61052b565b61047986880188610781565b8051602001519091501561049f5760405162461bcd60e51b81526004016104029061092c565b81516104bd5760405162461bcd60e51b815260040161040290610a3d565b602082015115806104d15750438260200151115b6104ed5760405162461bcd60e51b8152600401610402906109fb565b5060019695505050505050565b60405180608001604052806060815260200160006001600160a01b0316815260200160608152602001606081525090565b604051806040016040528061053e610579565b815260200161054b610579565b905290565b604080518082019091526000808252602082015290565b60408051602081019091526000815290565b60405180604001604052806002906020820280368337509192915050565b60008083601f8401126105a8578182fd5b50813567ffffffffffffffff8111156105bf578182fd5b6020830191508360208285010111156105d757600080fd5b9250929050565b6000602082840312156105ef578081fd5b5051919050565b6000806000806040858703121561060b578283fd5b843567ffffffffffffffff80821115610622578485fd5b61062e88838901610597565b90965094506020870135915080821115610646578384fd5b5061065387828801610597565b95989497509550505050565b60008060008060008060608789031215610677578182fd5b863567ffffffffffffffff8082111561068e578384fd5b61069a8a838b01610597565b909850965060208901359150808211156106b2578384fd5b6106be8a838b01610597565b909650945060408901359150808211156106d6578384fd5b506106e389828a01610597565b979a9699509497509295939492505050565b600060208284031215610706578081fd5b815167ffffffffffffffff8082111561071d578283fd5b818401915084601f830112610730578283fd5b81518181111561073e578384fd5b610751601f8201601f1916602001610b4f565b9150808252856020828501011115610767578384fd5b610778816020840160208601610b76565b50949350505050565b600060808284031215610792578081fd5b61079c6040610b4f565b83601f8401126107aa578182fd5b6107b46040610b4f565b808460408601878111156107c6578586fd5b855b60028110156107e75782358552602094850194909201916001016107c8565b5082855287605f8801126107f9578586fd5b6108036040610b4f565b9350839250905060808601871015610819578485fd5b845b600281101561084f5781356001600160a01b038116811461083a578687fd5b8452602093840193919091019060010161081b565b50506020830152509392505050565b60006020828403121561086f578081fd5b6108796020610b4f565b9135825250919050565b600060408284031215610894578081fd5b61089e6040610b4f565b82358152602083013560208201528091505092915050565b600081518084526108ce816020860160208601610b76565b601f01601f19169290920160200192915050565b600082516108f4818460208701610b76565b9190910192915050565b901515815260200190565b90815260200190565b60006020825261092560208301846108b6565b9392505050565b6020808252602b908201527f486173686c6f636b5472616e736665723a204e4f4e5a45524f5f52454349504960408201526a454e545f42414c414e434560a81b606082015260800190565b60208082526022908201527f486173686c6f636b5472616e736665723a204e4f4e5a45524f5f4c4f434b48416040820152610a6960f31b606082015260800190565b60208082526022908201527f486173686c6f636b5472616e736665723a20494e56414c49445f505245494d41604082015261474560f01b606082015260800190565b60208082526022908201527f486173686c6f636b5472616e736665723a20455850495245445f54494d454c4f604082015261434b60f01b606082015260800190565b6020808252818101527f486173686c6f636b5472616e736665723a20454d5054595f4c4f434b48415348604082015260600190565b815160808201908260005b6002811015610a9c578251825260209283019290910190600101610a7d565b5050506020808401516040840160005b6002811015610ad25782516001600160a01b031682529183019190830190600101610aac565b5050505092915050565b600060208252825160806020840152610af860a08401826108b6565b905060018060a01b0360208501511660408401526040840151601f1980858403016060860152610b2883836108b6565b9250606086015191508085840301608086015250610b4682826108b6565b95945050505050565b60405181810167ffffffffffffffff81118282101715610b6e57600080fd5b604052919050565b60005b83811015610b91578181015183820152602001610b79565b83811115610ba0576000848401525b5050505056fe7475706c652862797465733332206c6f636b486173682c2075696e743235362065787069727929a2646970667358221220856c54298a0518a5d0e047ccfe6525314acd5c77867748cd1586d294d966972f64736f6c63430007010033";
