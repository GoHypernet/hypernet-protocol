/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ITransferRegistryInterface extends ethers.utils.Interface {
  functions: {
    "addTransferDefinition(tuple)": FunctionFragment;
    "getTransferDefinitions()": FunctionFragment;
    "removeTransferDefinition(string)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addTransferDefinition",
    values: [
      {
        name: string;
        definition: string;
        stateEncoding: string;
        resolverEncoding: string;
        encodedCancel: BytesLike;
      },
    ],
  ): string;
  encodeFunctionData(
    functionFragment: "getTransferDefinitions",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "removeTransferDefinition",
    values: [string],
  ): string;

  decodeFunctionResult(
    functionFragment: "addTransferDefinition",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTransferDefinitions",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeTransferDefinition",
    data: BytesLike,
  ): Result;

  events: {
    "TransferAdded(tuple)": EventFragment;
    "TransferRemoved(tuple)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "TransferAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransferRemoved"): EventFragment;
}

export class ITransferRegistry extends Contract {}
