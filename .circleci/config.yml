version: 2.1
orbs:
  gke: circleci/gcp-gke@1.2.0
  gcr: circleci/gcp-gcr@0.13.0
executors:
  ubuntu:
    machine:
      image: ubuntu-2004:202104-01

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: "cimg/node:12.14.1"
      auth:
        username: mydockerhub-user
        password: $DOCKERHUB_PASSWORD

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: echo "registry=https://registry.npmjs.org/" > ~/.npmrc
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
      - run: sudo apt update && sudo apt install -y python
      - run: yarn install
      - run: yarn test
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with test npm registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Prepare builds for publish
          command: yarn prepare-for-publish
      - run:
          name: Run publish script
          command: chmod 755 ./scripts/npmVersion.sh && ./scripts/npmVersion.sh
  
# Orchestrate our job run sequence
workflows:
  test_and_publish:
    jobs:
      - test:
          context: Hypernet Protocol
      - publish:
          context: Hypernet Protocol
          filters:
            branches:
              only: master
          requires:
            - test
      - gke/publish-and-rollout-image:
          name: Deploy Core Iframe
          cluster: galileo
          container: hypernet-protocol-core-iframe
          deployment: hypernet-protocol-core-iframe
          image: hypernetlabs/hypernet-protocol-core-iframe
          google-compute-zone: GOOGLE_KUBERNETES_ZONE
          tag: $CIRCLE_SHA1
          dockerfile-dir: packages/iframe
          docker-context: .
          filters:
            branches:
              only: dev
          context: Development
          executor: ubuntu
          use-remote-docker: false
          extra-build-args: "--build-arg CHAIN_ID=1369 --build-arg IFRAME_SOURCE=https://vector-iframe-dev.hypernetlabs.io --build-arg 'CHAIN_PROVIDERS={\"1369\": \"https://eth-provider-dev.hypernetlabs.io\"}' --build-arg VALIDATOR_IFRAME_URL=https://validator-iframe-dev.hypernetlabs.io --build-arg NATS_URL=ws://vector-nats-dev.hypernetlabs.io:4221 --build-arg AUTH_URL=https://vector-auth-dev.hypernetlabs.io --build-arg BUILD_ENV=PROD"
      - gcr/add-image-tag:
          name: Tag Latest Core Iframe
          image: hypernetlabs/hypernet-protocol-core-iframe
          source-tag: $CIRCLE_SHA1
          target-tag: latest
          requires:
            - Deploy Core Iframe
          context: Development
      - gke/publish-and-rollout-image:
          name: Deploy Validator Iframe
          cluster: galileo
          container: hypernet-protocol-validator-iframe
          deployment: hypernet-protocol-validator-iframe
          image: hypernetlabs/hypernet-protocol-validator-iframe
          google-compute-zone: GOOGLE_KUBERNETES_ZONE
          tag: $CIRCLE_SHA1
          dockerfile-dir: packages/merchant-iframe
          docker-context: .
          filters:
            branches:
              only: dev
          context: Development
          executor: ubuntu
          use-remote-docker: false
          extra-build-args: "--build-arg BUILD_ENV=PROD"
      - gcr/add-image-tag:
          name: Tag Latest Validator Iframe
          image: hypernetlabs/hypernet-protocol-validator-iframe
          source-tag: $CIRCLE_SHA1
          target-tag: latest
          requires:
            - Deploy Validator Iframe
          context: Development
      - gke/publish-and-rollout-image:
          name: Deploy User Dashboard
          cluster: galileo
          container: hypernet-protocol-user-dashboard
          deployment: hypernet-protocol-user-dashboard
          image: hypernetlabs/hypernet-protocol-user-dashboard
          google-compute-zone: GOOGLE_KUBERNETES_ZONE
          tag: $CIRCLE_SHA1
          dockerfile-dir: packages/user-dashboard
          docker-context: .
          filters:
            branches:
              only: dev
          context: Development
          executor: ubuntu
          use-remote-docker: false
          extra-build-args: "--build-arg CORE_IFRAME_SOURCE=https://core-iframe-dev.hypernetlabs.io --build-arg BUILD_ENV=PROD"
      - gcr/add-image-tag:
          name: Tag Latest User Dashboard
          image:  hypernetlabs/hypernet-protocol-user-dashboard
          source-tag: $CIRCLE_SHA1
          target-tag: latest
          requires:
            - Deploy User Dashboard
          context: Development
